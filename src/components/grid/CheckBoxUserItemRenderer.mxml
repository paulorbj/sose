<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 horizontalAlign="center"
		 verticalAlign="middle"
		 implements = "mx.controls.listClasses.IDropInListItemRenderer"
		 paddingLeft="5"
		 preinitialize="preInit();">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.containers.Grid;
			import mx.controls.AdvancedDataGrid;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.controls.listClasses.BaseListData;
			
			import spark.components.CheckBox;
			
			import utils.AuthenticationUtils;
			
			private var checkBox:CheckBox;
			
			private var _data:Object;
			
			private var _listData:BaseListData;
			
			private var dataGrid:AdvancedDataGrid;
			
			private var idCurrentUser:int = -1;
			
			public function preInit():void
			{
				idCurrentUser = AuthenticationUtils.currentUser.id;
			}
			
			[Bindable("dataChange")]
			public function get listData():BaseListData
			{
				return _listData;
			}
			
			public function set listData(value:BaseListData):void
			{
				_listData = value;
				
				dataGrid = value.owner as AdvancedDataGrid;
			}
			
			override public function set data(value:Object):void
			{
				_data = value;
				
				checkBox = new CheckBox();
				
				this.removeAllChildren();
				
				this.addChild(checkBox);
				
				if (value is AdvancedDataGridColumn) {	// Header
					
					var dataProvider:ArrayCollection = dataGrid.dataProvider as ArrayCollection;
					
					var selectAll:Boolean = true;
					var b:int = 0;
					for (var i:int = 0; i < dataProvider.length; i++) {
						
						if (null != dataProvider && idCurrentUser != dataProvider[i].id && !dataProvider[i].blocked) { 
							if (dataProvider[i].isSelected == false) {
								selectAll = false;
							}
						}
						
						if (dataProvider[i].blocked) {
							b++
						}
					}
					
					if (dataProvider.length == b) {
						selectAll = false;
					}
					
					checkBox.selected = selectAll;
				}
				else {	// Cell
					
					checkBox.selected = value.isSelected as Boolean;
					if (idCurrentUser == value.id || value.blocked) { 
						checkBox.enabled = false;
					}
					
				}
				
				checkBox.addEventListener(Event.CHANGE, onChange);
			}
			
			override public function get data():Object
			{
				return _data;
			}
			
			private function onChange(event:Event):void
			{
				if (_data != null) {
					
					if (_data is AdvancedDataGridColumn) {
						
						var dataProvider:ArrayCollection = dataGrid.dataProvider as ArrayCollection;
						
						for (var i:int = 0; i < dataProvider.length; i++) {
							
							if (null != dataProvider && idCurrentUser != dataProvider[i].id && !dataProvider[i].blocked) { 
								dataProvider[i].isSelected = checkBox.selected;
							}
						}
					}
					else {
						_data.isSelected = !_data.isSelected;;
					}
					dataGrid.invalidateList();
				}
			}
		]]>
	</fx:Script>
	
</mx:VBox>

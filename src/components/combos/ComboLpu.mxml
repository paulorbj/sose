<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:combo="components.*" 
		 paddingBottom="0"
		 paddingLeft="0"
		 paddingRight="0"
		 paddingTop="0" width="200"
		 creationComplete="onCreationComplete()">
	
	<fx:Declarations>
		<mx:RemoteObject id="itemLpuService" destination="itemLpuService" endpoint="{resourceManager.getString('ConfigurationResource','amf')}">			
			<mx:method name="listarPorCliente"      
					   fault="onListarLpuPorClienteFault(event)" 
					   result="onListarLpuPorClienteResult(event)"
					   />
		</mx:RemoteObject>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import entities.administrativo.ItemLpu;
			import entities.administrativo.Lpu;
			import entities.administrativo.parceiros.Pessoa;
			
			import mx.collections.ArrayCollection;
			import mx.managers.CursorManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			private var _cliente:Pessoa;
			
			[Bindable]
			public var changeFunction:Function = null;
			
			[Bindable]
			public var required:Boolean = false;
			
			[Bindable]
			public var labelText:String = "";
			
			private function onCreationComplete():void
			{
				comboBox.labelField = "unidade";
				comboBox.textoPadrao = "Selecione uma unidade lpu...";
			}
			
			private function onListarLpusResult(event:ResultEvent = null):void
			{
				if(event.result != null)
					comboBox.dataProvider = event.result as ArrayCollection;
				comboBox.enabled = true;
			}
			
			private function onListarLpusFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[Inicializao do combo lpu] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");		
			}
			
			public function onListarLpuPorClienteResult(event:ResultEvent):void
			{
				if(event.result != null)
					comboBox.dataProvider = event.result as ArrayCollection;
			}
			
			public function onListarLpuPorClienteFault(event:FaultEvent):void
			{
				CursorManager.removeAllCursors();
				trace("[ListarLpuPorClienteFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");	
			}
			
			public function get itemLpuSelecionada():ItemLpu 
			{
				if(comboBox.selectedItem == null || comboBox.selectedItemIndex == -1)
					return null;
				else
					return comboBox.selectedItem as ItemLpu; 
			}
			
			public function set itemLpuSelecionada(itemLpu:ItemLpu):void 
			{
				comboBox.selectedItem = itemLpu;
			}
			
			public function get cliente():Pessoa
			{
				return _cliente;
			}
			
			public function set cliente(value:Pessoa):void
			{
				if(value){
					itemLpuService.listarPorCliente(value);
				}
				_cliente = value;
			}
			
			//TODO - não está removendo o item selecionado
			public function limpar():void
			{
				if((comboBox.dataProvider != null) && (comboBox.dataProvider.length > 0)){
					comboBox.selectedItem = new ItemLpu();
					comboBox.clean();
				}else{
					comboBox.clean();
				}	
			}
		]]>
	</fx:Script>
	
	<combo:ComboBoxInput id="comboBox" required="{required}" change="{changeFunction}" labelText="{labelText}" sortField="unidade" />
</mx:VBox>

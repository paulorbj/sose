<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:combo="components.*" 
		 paddingBottom="0"
		 paddingLeft="0"
		 paddingRight="0"
		 paddingTop="0" width="200"
		 creationComplete="onCreationComplete()">
	
	<fx:Declarations>
		<mx:RemoteObject id="usuarioService" destination="usuarioService" endpoint="{resourceManager.getString('ConfigurationResource','amf')}">			
			<mx:method name="listarUsuarios"      
					   fault="onListarUsuariosFault(event)" 
					   result="onListarUsuariosResult(event)"
					   />
			<mx:method name="listarPorLaboratorio"      
					   fault="onListarUsuariosPorClienteFault(event)" 
					   result="onListarUsuariosPorClienteResult(event)"
					   />
		</mx:RemoteObject>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import entities.administrativo.Laboratorio;
			import entities.administrativo.Usuario;
				
			import mx.collections.ArrayCollection;
			import mx.managers.CursorManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			private var _laboratorio:Laboratorio;
			
			[Bindable]
			public var changeFunction:Function = null;
			
			[Bindable]
			public var required:Boolean = false;
			
			[Bindable]
			private var _labelText:String = "";
			
			private function onCreationComplete():void
			{
				usuarioService.listarUsuarios();
				comboBox.dataProvider = new ArrayCollection;
				comboBox.labelField = "usuario";
				comboBox.textoPadrao = "Selecione uma usuário...";
				
			}
			
			private function onListarUsuariosResult(event:ResultEvent = null):void
			{
				if(event.result != null){
					comboBox.dataProvider = event.result as ArrayCollection;
					if(comboBox.selectedItem != null){
						for each (var usr:Usuario in comboBox.dataProvider){
							if(comboBox.selectedItem.id == usr.id){
								comboBox.selectedItem = usr;
								break;
							}
						}
					}
				}
				comboBox.enabled = true;
			}
			
			private function onListarUsuariosFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[Inicializao do combo usuario] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");		
			}
			
			public function onListarUsuariosPorClienteResult(event:ResultEvent):void
			{
				if(event.result != null)
					comboBox.dataProvider = event.result as ArrayCollection;
			}
			
			public function onListarUsuariosPorClienteFault(event:FaultEvent):void
			{
				CursorManager.removeAllCursors();
				trace("[ListarUsuariosPorClienteFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");	
			}
			
			public function get usuarioSelecionado():Usuario 
			{
				if(comboBox.selectedItem == null || comboBox.selectedItemIndex == -1)
					return null;
				else
					return comboBox.selectedItem as Usuario; 
			}
			
			public function set usuarioSelecionado(usuario:Usuario):void 
			{
				comboBox.selectedItem = usuario;
			}
			
			public function get laboratorio():Laboratorio
			{
				return _laboratorio;
			}
			
			public function set laboratorio(value:Laboratorio):void
			{
				if(value){
					usuarioService.listarPorLaboratorio(value);
				}else{
					usuarioService.listarUsuarios();
				}
				_laboratorio = value;
			}
			
			[Bindable]
			public function get labelText():String 
			{
				return _labelText;
			}
			
			public function set labelText(value:String):void 
			{
				_labelText = value;
			}
			
			//TODO - não está removendo o item selecionado
			public function limpar():void
			{
				comboBox.selectedItem = new Usuario();
				//comboBox.clean();
			}
		]]>
	</fx:Script>
	
	<combo:ComboBoxInput id="comboBox" required="{required}" labelText="{_labelText}" sortField="usuario" change="{changeFunction}" />
</mx:VBox>

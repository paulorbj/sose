<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%" 
		 verticalGap="0" 
		 xmlns:faturamento="modules.faturamento.*" 
		 xmlns:components="components.*"
		 xmlns:grid="components.grid.*" 
		 xmlns:dc="components.grid.filtros.controles.*"
		 xmlns:combos="components.combos.*">
<!--	creationComplete="configurarSubMenu();"-->
	<fx:Declarations>
		<mx:Fade id="fadeIn" duration="100" alphaFrom="0" alphaTo="1"/>
		<mx:Fade id="fadeOut" duration="100" alphaFrom="1" alphaTo="0"/>
		

		
		<mx:RemoteObject id="ordemServicoService" destination="ordemServicoService" requestTimeout="-1" endpoint="{resourceManager.getString('ConfigurationResource','amf')}">			
			<mx:method name="listarOrdemServicoAFaturarN"      
					   fault="onListarOrdemServicoAFaturarNFault(event)" 
					   result="onListarOrdemServicoAFaturarNResult(event)"
					   />
		</mx:RemoteObject>
		
		<mx:RemoteObject id="pessoaService" destination="pessoaService" endpoint="{resourceManager.getString('ConfigurationResource','amf')}">			
			<mx:method name="buscarPorId"      
					   fault="onbuscarPorIdFault(event)" 
					   result="onbuscarPorIdResult(event)"
					   />
		</mx:RemoteObject>
		
		<mx:RemoteObject id="faturamentoService" destination="faturamentoService" endpoint="{resourceManager.getString('ConfigurationResource','amf')}">			
			<mx:method name="buscarPorId"      
					   fault="onbuscarFaturaPorIdFault(event)" 
					   result="onbuscarFaturaPorIdResult(event)"
					   />
		</mx:RemoteObject>
		<!--public List<OrdemServico> listarOrdemFaturamentoAFaturar(final Pessoa cliente, final Date de, final Date ate)-->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import components.messages.MensagemEvent;
			import components.messages.MessageType;
			
			import entities.administrativo.parceiros.Pessoa;
			import entities.faturamento.Faturamento;
			import entities.recebimento.OrdemServico;
			
			import modules.view.Login;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.controls.List;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.managers.CursorManager;
			import mx.messaging.events.MessageEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			
			private var sortListagem:Sort;
			
			private var listaStatusArray:Array = new Array("Pendente", "Faturado", "Todos");
			private var listaStatus:ArrayCollection = new ArrayCollection(listaStatusArray);
			
			[Bindable]
			private var _listaOrdemServico:ArrayCollection;
			
			[Bindable]
			private var _cliente:Pessoa;
			
			[Bindable]
			private var _listaFatura:ArrayCollection;
			
			[Bindable]
			public var _fatura:Faturamento;
			
			[Bindable]
			public var _somatoria:Number;
			
/* 			private function configurarSubMenu():void
			{
				if(Login.currentUser){
					if(!Login.currentUser.perfil.subMenuBaixaFaturamento){
						subMenu.removeChild(baixa);
					}
					if(!Login.currentUser.perfil.subMenuListagemFaturamento){
						subMenu.removeChild(listagem);
					}
				} 
			} */
			
			private function pesquisar(event:MouseEvent = null):void
			{
				//faturamentoService.listarFaturas();
				_cliente = cbCliente.clienteSelecionado as Pessoa;
				pessoaService.buscarPorId(_cliente.id);
				if (_cliente){
					ordemServicoService.listarOrdemServicoAFaturarN(_cliente, dataDe.inputDate, dataAte.inputDate);
					

				}
				
				
			}
			
			private function onbuscarPorIdResult(event:ResultEvent = null):void
			{
				_cliente = event.result as Pessoa;
			
			}
			
			private function onbuscarPorIdFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[ListarContatosFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");		
				dispatchEvent(new MensagemEvent("Erro ao buscar Pessoa por ID", MessageType.ERROR, 5000));
			}
			
			private function onbuscarFaturaPorIdResult(event:ResultEvent = null):void
			{
				var _fat:Faturamento;
				var _os:OrdemServico;
				
				_fat = event.result as Faturamento;
				
				if (_listaOrdemServico) {
					_os = _listaOrdemServico.getItemAt(achaPosicaoDaFatura(_fat.id)) as OrdemServico;
					_os.faturamento = _fat;
				}
				
				
				
			}
			
			private function onbuscarFaturaPorIdFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[ListarContatosFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");		
				dispatchEvent(new MensagemEvent("Erro ao buscar Pessoa por ID", MessageType.ERROR, 5000));
			}
			
			

			
		
			
			private function achaPosicaoDaFatura(idFatura:Number):Number
			{
			if (_listaOrdemServico){
				
			
				for each(var os:OrdemServico in _listaOrdemServico){
					if (os.faturamento.id == idFatura) return _listaOrdemServico.getItemIndex(os);
				}
			}
				return 0;
			}
			private function onListarOrdemServicoAFaturarNResult(event:ResultEvent = null):void
			{
				_listaOrdemServico = event.result as ArrayCollection;
				_somatoria = somaFaturas;
				//for each(var os:OrdemServico in _listaOrdemServico){
				//	faturamentoService.buscarPorId(os.faturamento.id)
				//}
			}
			
			private function onListarOrdemServicoAFaturarNFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[Fault em ListarOrdemServiço] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");
				dispatchEvent(new MensagemEvent("Erro ao listar OSs --> ", MessageType.ERROR, 5000));
				
			}
				
/* 			private function initializeListagem():void
			{
				sortListagem = new Sort();
				sortListagem.fields=[new SortField("nomeCliente",false,false,false),new SortField("numeroOrdemServico",false,false,true)];
			}	 */	
			
			private function get totalFaturas():Number
			{
				var total:Number = 0;
				faturamentoService.listarFaturas();
				if(_listaFatura){
					for each(var fat:Faturamento in _listaFatura){
						total = total + fat.totalFatura;
					}
				}
				return total;
			}
			
			public function changeF(event:Event = null):void
			{
									
					//_cliente = cbCliente.clienteSelecionado as Pessoa;
					//pessoaService.buscarPorId(_pessoa.id);
			
				
				/* contatoService.listarPorCliente(_pessoa); */
				
			}
			
			private function get somaFaturas():Number
			{
				var total:Number = 0;
				
				if (_listaOrdemServico == null) return 0;
				for each(var os:OrdemServico in _listaOrdemServico){
					/* if (os.lpu == null)  */total = total + os.lpu.valorReparo; //aqui pode ser valorPago ao inves de totalFatura.. checar
					/* else  total = total + os.faturamento.totalFatura; */
				}
				
				return total;
			}
		]]>
	</fx:Script>
	

	

			<mx:HBox verticalAlign="middle" width="100%">
				<!--changeFunction="{changeF}"-->
				<!--<combos:ComboCheckCliente id="cbcCliente" labelText="Cliente" width="200" required="true"  />-->
				<combos:ComboCliente id="cbCliente"  required="true"  labelText="{resourceManager.getString('ApplicationResource','CLIENTE')}" width="25%" />
				<components:DataInput id="dataDe" required="true" labelText="{resourceManager.getString('ApplicationResource','DATA_DE')}" width="10%" inputHeight="20" />
				<components:DataInput id="dataAte" required="true" labelText="{resourceManager.getString('ApplicationResource','DATA_ATE')}" width="10%" inputHeight="20" />
				<!--<components:ComboBoxInput id="statusFaturamento" required="true" labelText="Status" width="200" dataProvider="{listaStatus}"/>-->
				<mx:Button id="btPesquisar"
						   label="Pesquisar"
						   height="25"
						   icon="@Embed(source='/assets/icons/user.png')"
						   click="pesquisar(event)"/>
			</mx:HBox>
	
	
			<mx:TitleWindow title="Lista de ordens de serviço - Nº de OSs: {_listaOrdemServico.length}" width="100%" height="98%" >
				<grid:MantisTable id="viewTable"
								  width="100%"
								  height="100%"
								  draggableColumns="true"
								  dataProvider="{_listaOrdemServico}"
								  doubleClickEnabled="false"
								  >
					<grid:columns>
						
						<!-- CHANGE HERE THE ENTITY COLUMNS -->
						
						<!-- EDIT/REMOVE COLUMNS -->
						

						
						
<!--						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.DateFilterRenderer" id="dataEmissaoFatura"
												 headerText = "Data emissão"
												 textAlign="center"
												 sortable="false"
												 dataField="faturamento.dataEmissaoFaturaString"							   
												 />
						
						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="dataCriacao"
												 headerText = "Nº Fatura"
												 textAlign="center"
												 sortable="false"
												 dataField="faturamento.numeroFatura"							   
												 />-->
						
						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="dataChegadaNotaFiscal"
												 headerText = "Chegada Nota Fiscal"
												 textAlign="center"
												 width="80"
												 dataField="dataChegadaNotaFiscal"							   
												 />
						
						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="cliente"
												 headerText = "{resourceManager.getString('ApplicationResource','CLIENTE')}"
												 textAlign="center"
												 sortable="false"
												 width="100"
												 dataField="nomeCliente"							   
												 />
						
						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="unidade"
												 headerText = "Unidade"
												 textAlign="center"
												 sortable="false"
												 width="120"
												 dataField="nomeUnidade"							   
												 />
						
						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="status"
												 headerText = "Status"
												 textAlign="center"
												 sortable="false"
												 width="80"
												 dataField="statusString"							   
												 />
						
<!--						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="statusFatura"
												 headerText = "Status Fatura"
												 textAlign="center"
												 sortable="false"
												 dataField="faturamento.statusString"							   
												 />-->
						
<!--						<dc:DataGridColumnFilter id="valor" 
												 headerText = "**Valor"
												 dataField = "faturamento.totalFatura"
												 width="80"
												 />-->
						
						<dc:DataGridColumnFilter id="valorLpu" 
												 headerText = "**Valor da LPU"
												 dataField = "lpu.valorReparo"
												 width="40"
												 />
						

						
<!--						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.DateFilterRenderer" id="dataVencimentoFatura"
												 headerText = "Data vencimento"
												 textAlign="center"
												 sortable="false"
												 dataField="faturamento.dataVencimentoFaturaString"							   
												 />-->
						
<!--						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.DateFilterRenderer" id="dataPagamentoFatura"
												 headerText = "Data pagamento"
												 textAlign="center"
												 sortable="false"
												 dataField="faturamento.dataPagamentoFaturaString"							   
												 />-->
						
					</grid:columns>
				</grid:MantisTable>
			</mx:TitleWindow>

	<mx:HBox paddingTop="10">
		<s:Label text="Somatória das Faturas: R$ {_somatoria}" textAlign="right" fontWeight="bold" fontSize="14"  />
	</mx:HBox>
			<!--<faturamento:DetalhamentoFatura id="detalhamentoFatura" />-->
			
		
		
			
		
			
		
			
	

	
</mx:VBox>

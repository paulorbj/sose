<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%" creationComplete="configurarSubMenu();"
		 verticalGap="0" 
		 xmlns:faturamento="modules.faturamento.*" 
		 xmlns:components="components.*"
		 xmlns:grid="components.grid.*" 
		 xmlns:dc="components.grid.filtros.controles.*"
		 xmlns:combos="components.combos.*">
	<fx:Script>
		<![CDATA[
			
			import modules.view.Login;
			import entities.faturamento.Faturamento;
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.managers.CursorManager;
			
			import mx.messaging.events.MessageEvent;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.collections.Sort;
			import mx.collections.SortField;
			
			
			private var sortListagem:Sort;
			
			[Bindable]
			private var _listaOrdemServico:ArrayCollection;
			
			[Bindable]
			private var _listaFatura:ArrayCollection;
			
			[Bindable]
			public var _fatura:Faturamento;
			
			private function configurarSubMenu():void
			{
/* 				if(Login.currentUser){
					if(!Login.currentUser.perfil.subMenuBaixaFaturamento){
						subMenu.removeChild(baixa);
					}
					if(!Login.currentUser.perfil.subMenuListagemFaturamento){
						subMenu.removeChild(listagem);
					}
				} */
			}
			
			private function pesquisar(event:MouseEvent):void
			{
				//if(validarCamposPesquisa()){
					ordemServicoService.showBusyCursor = true;
					ordemServicoService.channelSet = parentApplication.channelSet;
					ordemServicoService.listarOrdemServicoAFaturar(cbcCliente.clienteSelecionado,dataDe.inputDate,dataAte.inputDate);
				//}else{
				//	dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','ERRO_VALIDACAO'), MessageType.WARNING, 3000));
				//}
			}
			
			private function onListarOrdemServicoAFaturarResult(event:ResultEvent = null):void
			{
				_listaOrdemServico = event.result as ArrayCollection;
				_listaOrdemServico.sort = sortListagem;
				_listaOrdemServico.refresh();
			}
			
			private function initializeListagem():void
			{
				sortListagem = new Sort();
				sortListagem.fields=[new SortField("nomeCliente",false,false,false),new SortField("numeroOrdemServico",false,false,true)];
			}		
			
			private function onListarOrdemServicoAFaturarFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[onListarOrdemServicoBaixaExpedicaoFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");		
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:Fade id="fadeIn" duration="100" alphaFrom="0" alphaTo="1"/>
		<mx:Fade id="fadeOut" duration="100" alphaFrom="1" alphaTo="0"/>
	
		<mx:RemoteObject id="ordemServicoService" destination="ordemServicoService" requestTimeout="-1" endpoint="{resourceManager.getString('ConfigurationResource','amf')}">			
			<mx:method name="listarOrdemServicoAFaturar"      
					   fault="onListarOrdemServicoAFaturarFault(event)" 
					   result="onListarOrdemServicoAFaturarResult(event)"
					   />
		</mx:RemoteObject>
		
	
	</fx:Declarations>
	

			<mx:HBox verticalAlign="middle" width="100%">
				<combos:ComboCheckCliente id="cbcCliente" labelText="Cliente" width="200" required="true"  />
				<components:DataInput id="dataDe" required="true" labelText="{resourceManager.getString('ApplicationResource','DATA_DE')}" width="10%" inputHeight="20" />
				<components:DataInput id="dataAte" required="true" labelText="{resourceManager.getString('ApplicationResource','DATA_ATE')}" width="10%" inputHeight="20" />
				<mx:Button id="btPesquisar"
						   label="Pesquisar"
						   height="25"
						   icon="@Embed(source='/assets/icons/user.png')"
						   click="pesquisar(event)"/>
			</mx:HBox>
	
	
			<mx:TitleWindow title="Lista de ordens de serviço - Nº de OSs: {_listaOrdemServico.length}" width="100%" height="98%" >
				<grid:MantisTable id="tabelaListaOs"
								  width="100%"
								  height="98%"
								  draggableColumns="true" editable="false"
								  dataProvider="{_listaOrdemServico}"
								  doubleClickEnabled="false"
								  >
					<grid:columns>
						
						<!-- CHANGE HERE THE ENTITY COLUMNS -->
						
						<!-- EDIT/REMOVE COLUMNS -->
						
					
						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="dtFaturamento" width=".10"
												 headerText = "Data Faturamento"
												 textAlign="center"
												 sortable="false"
												 dataField="dtFaturamento"							   
												 />
						
						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="cCliente" width=".10"
												 headerText = "Cliente"
												 textAlign="center"
												 sortable="false"
												 dataField="cliente.nomeSistema"							   
												 />
						

						
						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="numeroNFSaida" width=".10"
												 headerText = "Nº Fatura"
												 textAlign="center"
												 sortable="false"
												 dataField="notaFiscalSaida.numero"							   
												 />
						
						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="unidade" width=".10"
												 headerText = "Valor Faturado" 
												 textAlign="center"
												 sortable="false"
												 dataField="unidade.nome"							   
												 />
				
						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="dtVencimento" width=".10"
												 headerText = "Data Vencimento"
												 textAlign="center"
												 sortable="false"
												 dataField="dtVencimento"							   
												 />
						<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="dtPagamento" width=".10"
												 headerText = "Data Pagamento"
												 textAlign="center"
												 sortable="false"
												 dataField="dtPagamento"							   
												 />
						
					</grid:columns>
				</grid:MantisTable>
			</mx:TitleWindow>
		
			
			<!--<faturamento:DetalhamentoFatura id="detalhamentoFatura" />-->
			
		
		
			
		
			
		
			
	

	
</mx:VBox>

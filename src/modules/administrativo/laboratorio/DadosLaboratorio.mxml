<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:grid="components.grid.*"
		 xmlns:texto="components.textInput.*" width="100%"
		 xmlns:combos="components.combos.*"
		 
		 >
	<fx:Declarations>
		<mx:RemoteObject id="usuarioService" destination="usuarioService" endpoint="{resourceManager.getString('ConfigurationResource','amf')}">			
			<mx:method name="listarUsuarios"      
					   fault="onListarUsuariosFault(event)" 
					   result="onListarUsuariosResult(event)"
					   />
		</mx:RemoteObject>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import entities.administrativo.Laboratorio;
			import entities.administrativo.Usuario;
			
			import mx.collections.ArrayCollection;
			import mx.managers.CursorManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			import mx.validators.Validator;
			
			[Bindable]
			private var _laboratorio:Laboratorio = new Laboratorio();
			
			[Bindable]
			public var listaUsuariosDisponiveis:ArrayCollection;
			
			[Bindable]
			private var listaUsuariosSelecionados:ArrayCollection;
			
			public function get laboratorio():Laboratorio
			{
				_laboratorio.tecnicos = listaUsuariosSelecionados;
				_laboratorio.lider = cbLider.usuarioSelecionado;
				return _laboratorio;
			}
			
			public function set laboratorio(value:Laboratorio):void
			{
				_laboratorio = value;

				if(_laboratorio.tecnicos){
					listaUsuariosSelecionados = _laboratorio.tecnicos;
					var listaEdicao:ArrayCollection = new ArrayCollection();
					var achou:Boolean = false;
					for each (var usrDisp:Usuario in listaUsuariosDisponiveis){
						for each (var usrSelec:Usuario in listaUsuariosSelecionados){
							if(ObjectUtil.compare(usrSelec.id,usrDisp.id)==0){
								achou = true;
							}
						}
						if(!achou){
							listaEdicao.addItem(usrDisp);
							achou = false;
						}
						achou = false;
					}
					listaUsuariosDisponiveis = listaEdicao;
				}
				
				if(value.lider){
					cbLider.usuarioSelecionado = value.lider;
				}
			}
			
			public function limpar():void
			{
				_laboratorio = new Laboratorio();
				cbLider.limpar();
				usuarioService.listarUsuarios();
				listaUsuariosSelecionados = new ArrayCollection();
			}
			
			private function onListarUsuariosResult(event:ResultEvent = null):void
			{
				CursorManager.removeAllCursors(); 
				listaUsuariosDisponiveis = event.result as ArrayCollection;
			}
			
			private function onListarUsuariosFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[ListarUsuariosFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");		
			}
			
			public function adicionarMembro(data:Object, event:Event):void
			{					
				//for double click
				if(data==null && event is ListEvent){
					var event2:ListEvent = event as ListEvent						
					data = listaUsuariosDisponiveis.getItemAt(event2.rowIndex);				
				}	
				
				var index:int = listaUsuariosDisponiveis.getItemIndex(data as Usuario);
				data = listaUsuariosDisponiveis.removeItemAt(index);
				listaUsuariosSelecionados.addItem(data);
			}
			
			public function excluirMembro(data:Object, event:Event):void
			{					
				//for double click
				if(data==null && event is ListEvent){
					var event2:ListEvent = event as ListEvent						
					data = listaUsuariosSelecionados.getItemAt(event2.rowIndex);				
				}	
				
				var index:int = listaUsuariosSelecionados.getItemIndex(data as Usuario);
				data = listaUsuariosSelecionados.removeItemAt(index);
				listaUsuariosDisponiveis.addItem(data);
				
			}
			
			public function validarCampos():Boolean {	
				var validatorArr:Array = new Array();
				validatorArr.push(nome.stringValidator);
				validatorArr.push(cbLider.comboBox.comboValidator);
				
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);;
				var isValidForm:Boolean = validatorErrorArray.length == 0;			
				return isValidForm;
			}
			
		]]>
	</fx:Script>
	
	<fx:Binding destination="nome.inputText" source="_laboratorio.nome" twoWay="true"/>
	<fx:Binding destination="descricao.inputText" source="_laboratorio.descricao" twoWay="true"/>
	<fx:Binding destination="ativo.selected" source="_laboratorio.cadastroSistemaAtivo" twoWay="true"/>
	
	<mx:HBox verticalAlign="bottom" width="100%">
		<texto:TextInput id="nome" required="true" labelText="{resourceManager.getString('ApplicationResource','NOME_LABORATORIO')}" width="220"  />
		<texto:TextInput id="descricao" labelText="{resourceManager.getString('ApplicationResource','DESCRICAO')}" width="220" />
		<combos:ComboUsuario id="cbLider" required="true" labelText="{resourceManager.getString('ApplicationResource','LIDER')}" width="218" />
		<mx:CheckBox id="ativo" label="{resourceManager.getString('ApplicationResource','CADASTRO_ATIVO')}" />
	</mx:HBox>
	
	<mx:Accordion id="accordion" width="100%" height="270">
		<s:NavigatorContent label="Membros do laboratÃ³rio" width="100%" height="100%">
			
			<mx:HBox paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10" width="100%" height="100%"> 
				
				<mx:VBox width="50%" height="100%" >
					
				
				<grid:MantisTable id="tabelaUsuariosDisponiveis"
								  width="100%" height="100%"
								  draggableColumns="true"
								  dataProvider="{listaUsuariosDisponiveis}"
								  itemDoubleClick="adicionarMembro(data, event)"	>
					<grid:columns>
						
						<mx:DataGridColumn headerText = ""							   
										   itemRenderer="components.grid.CheckBoxItemRenderer"
										   headerRenderer="components.grid.CheckBoxItemRenderer"
										   width="25" resizable="false" draggable="false" sortable="false"
										   dataField="isSelected"
										   />
						
						<mx:DataGridColumn id="nomeUsuarioDisponivel" dataField="nome"
										   headerText = "{resourceManager.getString('ApplicationResource','NOME_USUARIO')}"
										   textAlign="center"
										   sortable="false"							   
										   />
						
						<!-- CHANGE HERE THE ENTITY COLUMNS -->
						
						<!-- EDIT/REMOVE COLUMNS -->
						
						<mx:DataGridColumn headerText = "{resourceManager.getString('ApplicationResource','ACTION_COLUMN')}"	
										   draggable="false"							 
										   editable="false"
										   sortable="false">
							<mx:itemRenderer>
								<fx:Component>
									<mx:HBox horizontalAlign="center"
											 verticalAlign="middle"
											 >
										
										<mx:Image source="@Embed(source='/assets/icons/add.png')"
												  click="parentDocument.adicionarMembro(data, event)"
												  buttonMode="true"
												  useHandCursor="true"
												  toolTip="{resourceManager.getString('ApplicationResource','EDIT')}"
												  />
										
										
										
									</mx:HBox>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						
						
					</grid:columns>
				</grid:MantisTable>
				</mx:VBox>
				<mx:VBox width="50%" height="100%" >
				<grid:MantisTable id="tabelaUsuariosSelecionados"
								  width="100%" height="100%"
								  draggableColumns="true"
								  dataProvider="{listaUsuariosSelecionados}"
								  itemDoubleClick="excluirMembro(data, event)"	>
					<grid:columns>
						
						<mx:DataGridColumn headerText = ""							   
										   itemRenderer="components.grid.CheckBoxItemRenderer"
										   headerRenderer="components.grid.CheckBoxItemRenderer"
										   width="25" resizable="false" draggable="false" sortable="false"
										   dataField="isSelected"
										   />
						
						<mx:DataGridColumn id="nomeUsuarioSelecionado"
										   headerText = "{resourceManager.getString('ApplicationResource','NOME_USUARIO')}"
										   textAlign="center"
										   sortable="false"
										   dataField="nome"						   
										   />
						
						<!-- CHANGE HERE THE ENTITY COLUMNS -->
						
						<!-- EDIT/REMOVE COLUMNS -->
						
						<mx:DataGridColumn headerText = "{resourceManager.getString('ApplicationResource','ACTION_COLUMN')}"	
										   draggable="false"							 
										   editable="false"
										   sortable="false">
							<mx:itemRenderer>
								<fx:Component>
									<mx:HBox horizontalAlign="center"
											 verticalAlign="middle"
											 >
										
										<mx:Image source="@Embed(source='/assets/icons/delete.png')"
												  click="parentDocument.excluirMembro(data, event)"
												  buttonMode="true"
												  useHandCursor="true"
												  toolTip="{resourceManager.getString('ApplicationResource','EXCLUIR')}"
												  />
										
									</mx:HBox>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						
						
					</grid:columns>
				</grid:MantisTable>
				
</mx:VBox>
			</mx:HBox>
		</s:NavigatorContent>
	</mx:Accordion>
</mx:VBox>

<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:componente="modules.administrativo.componente.*"
		 creationComplete="onCreationComplete()" 
		 width="100%" horizontalAlign="center" height="100%" 
		 paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10" >
	
	<fx:Declarations>
		<mx:RemoteObject id="componenteService" destination="componenteService" endpoint="{resourceManager.getString('ConfigurationResource','amf')}">			
			<mx:method name="listarComponentes"      
					   fault="onListarComponentesFault(event)" 
					   result="onListarComponentesResult(event)"
					   />
			<mx:method name="salvarComponente"      
					   fault="onSalvarComponenteFault(event)" 
					   result="onSalvarComponenteResult(event)"
					   />
			<mx:method name="excluirComponente"      
					   fault="onExcluirComponenteFault(event)" 
					   result="onExcluirComponenteResult(event)"
					   />
		</mx:RemoteObject>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import components.messages.MensagemEvent;
			import components.messages.MessageType;
			
			import entities.administrativo.Componente;
			
			import modules.administrativo.componente.eventos.ComponenteEvent;
			
			import mx.collections.ArrayCollection;
			import mx.managers.CursorManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]			
			private var _componente:Componente;
			
			[Bindable]	
			private var _listaComponente:ArrayCollection = new ArrayCollection;
			
			private function onCreationComplete():void
			{
				componenteService.listarComponentes();	
				this.addEventListener(ComponenteEvent.EDITAR_COMPONENTE,onEditar);
				this.addEventListener(ComponenteEvent.EXCLUIR_COMPONENTE,onExcluir);
			}
			
			private function onEditar(event:ComponenteEvent):void
			{
				this.currentState = "edicao";
				dados.componente = event.componente;
			}
			
			private function onExcluir(event:ComponenteEvent):void
			{
				_componente = event.componente;
				componenteService.excluirComponente(_componente);
			}
			
			private function onListarComponentesResult(event:ResultEvent = null):void
			{
				CursorManager.removeAllCursors(); 
				_listaComponente.removeAll();
				_listaComponente = event.result as ArrayCollection;
				listagem.setListaComponente(_listaComponente);
			}
			
			private function onListarComponentesFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[ListarComponentesFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");		
			}
			
			private function onSalvarComponenteResult(event:ResultEvent = null):void
			{
				CursorManager.removeAllCursors(); 
				_componente = event.result as Componente;
				if(dados.componente.id == 0){
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','COMPONENTE_SALVAR_SUCESSO'), MessageType.SUCCESS, 10000));
				}else{
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','COMPONENTE_EDITAR_SUCESSO'), MessageType.SUCCESS, 10000));
				}
				listagem.adicionarComponente(_componente);
				dados.limpar();
			}
			
			private function onSalvarComponenteFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[SalvarAtividadeFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");
				var str:String = event.fault.faultString.substr(0,22);
				var i:Number;
				if(str == "br.com.sose.exceptions"){
					i = event.fault.faultString.indexOf(":");
					dispatchEvent(new MensagemEvent(event.fault.faultString.substring(i+1), MessageType.ERROR, 10000));
				}else{
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','COMPONENTE_SALVAR_ERRO'), MessageType.ERROR, 10000));	
				}			
			}
			
			private function onExcluirComponenteResult(event:ResultEvent = null):void
			{
				CursorManager.removeAllCursors(); 
				var index:int = _listaComponente.getItemIndex(_componente);
				_listaComponente.removeItemAt(index);
				listagem.setListaComponente(_listaComponente);
				limpar();
				dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','COMPONENTE_REMOVER_SUCESSO'), MessageType.SUCCESS, 10000));
			}
			
			private function onExcluirComponenteFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[ExcluirComponenteFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");
				var i:Number;
				if(event.fault.faultString.search("br.com.sose.exceptions") != -1){
					i = event.fault.faultString.indexOf(":");
					dispatchEvent(new MensagemEvent(event.fault.faultString.substring(i+1), MessageType.ERROR, 10000));
				}else{
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','COMPONENTE_REMOVER_ERRO'), MessageType.ERROR, 10000));
				}					
			}
			
			private function salvar(event:MouseEvent = null):void
			{
				if(dados.validarCampos()){
					componenteService.salvarComponente(dados.componente);
				}else{
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','ERRO_VALIDACAO'), MessageType.WARNING, 10000));
				}
			}
			
			private function solicitarCompra(event:MouseEvent = null):void
			{
				
			}
			
			private function solicitarCompraEnter(event:KeyboardEvent):void
			{		
				if (event.charCode == 13) {
					solicitarCompra();
				}
			}
			
			private function limpar(event:MouseEvent = null):void
			{
				_componente = new Componente();
				if(dados)
					dados.limpar();
			}
			
			private function novo(event:MouseEvent = null):void
			{
				this.currentState = "insercao";
				limpar();			
			}
			
			private function voltar(event:MouseEvent = null):void
			{
				this.currentState = "listagem";
				limpar();
			}
			
			private function salvarEnter(event:KeyboardEvent):void
			{		
				if (event.charCode == 13) {
					salvar();
				}
			}
			
			private function limparEnter(event:KeyboardEvent):void
			{		
				if (event.charCode == 13) {
					limpar();
				}
			}
			
			private function voltarEnter(event:KeyboardEvent):void
			{		
				if (event.charCode == 13) {
					voltar();
				}
			}
			
		]]>
	</fx:Script>
	
	<mx:states>
		<s:State name="listagem"/>
		<s:State name="edicao"/>
		<s:State name="insercao"/>
	</mx:states>
	
	<mx:VBox width="100%" horizontalAlign="center">
		<s:Label fontSize="15" fontWeight="bold" text="{resourceManager.getString('ApplicationResource','LISTA_COMPONENTE')}" includeIn="listagem"/>
		<s:Label fontSize="15" fontWeight="bold" text="{resourceManager.getString('ApplicationResource','DETALHAMENTO_COMPONENTE')}" excludeFrom="listagem"/>
	</mx:VBox>	
	
	<mx:VBox width="100%" horizontalAlign="left">
		<mx:Button id="newButton" includeIn="listagem"
				   label="{resourceManager.getString('ApplicationResource','NOVO')}"
				   height="25"
				   icon="@Embed(source='/assets/icons/new.png')"
				   click="novo(event)"
				   />
	</mx:VBox>
	
	<componente:ListagemComponenteCadastrado id="listagem" includeIn="listagem" width="100%" />
	
	<componente:DadosComponente id="dados" excludeFrom="listagem" width="100%" />
	
	<mx:HBox width="100%" excludeFrom="listagem">
		<mx:Button id="saveButton" excludeFrom="listagem"
				   label="{resourceManager.getString('ApplicationResource','SALVAR')}"
				   height="25"
				   icon="@Embed(source='/assets/icons/save.png')"
				   keyDown="salvarEnter(event)"
				   click="salvar(event)"
				   />
		
		<mx:Button id="compraButton" excludeFrom="listagem"
				   label="Solicitar compra"
				   height="25"
				   icon="@Embed(source='/assets/icons/save.png')"
				   keyDown="solicitarCompraEnter(event)"
				   click="solicitarCompra(event)"
				   />
		<mx:Button id="cleanButton" excludeFrom="listagem"
				   label="{resourceManager.getString('ApplicationResource','LIMPAR')}"
				   height="25"
				   icon="@Embed(source='/assets/icons/clean.png')"
				   keyDown="limparEnter(event)"
				   click="limpar(event)"
				   />
		<mx:Button id="voltarButton" excludeFrom="listagem"
				   label="{resourceManager.getString('ApplicationResource','VOLTAR')}"
				   height="25"
				   icon="@Embed(source='/assets/icons/back.png')"
				   keyDown="voltarEnter(event)"
				   click="voltar(event)"
				   />
	</mx:HBox>
</mx:VBox>

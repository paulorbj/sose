<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:contato="modules.administrativo.parceiros.contato.*"
		 xmlns:textInput="components.textInput.*"
		 xmlns:componente="components.*"
		 xmlns:ns1="com.flexpernambuco.controls.*"
		 xmlns:combos="components.combos.*"
		 width="90%" paddingLeft="10" paddingTop="5" paddingBottom="5" paddingRight="10"
		 creationComplete="onCreationComplete()" >
	
	<fx:Declarations>
		<mx:RemoteObject id="contatoService" destination="contatoService" endpoint="{resourceManager.getString('ConfigurationResource','amf')}">			
			<mx:method name="listarContatos"      
					   fault="onListarContatosFault(event)" 
					   result="onListarContatosResult(event)"
					   />
			<mx:method name="salvarContato"      
					   fault="onSalvarContatoFault(event)" 
					   result="onSalvarContatoResult(event)"
					   />
			<mx:method name="excluirContato"      
					   fault="onExcluirContatoFault(event)" 
					   result="onExcluirContatoResult(event)"
					   />
		</mx:RemoteObject>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import components.messages.MensagemEvent;
			import components.messages.MessageType;
			
			import entities.administrativo.parceiros.Contato;
			import entities.administrativo.parceiros.Pessoa;
			
			import modules.administrativo.parceiros.contato.eventos.ContatoEvent;
			
			import mx.collections.ArrayCollection;
			import mx.managers.CursorManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]			
			private var _contato:Contato;
			
			private var _cliente:Pessoa;
			
			[Bindable]	
			private var _listaContato:ArrayCollection = new ArrayCollection;
			
			private function onCreationComplete():void
			{
				//				contatoService.listarContatos();	
				this.addEventListener(ContatoEvent.ADICIONAR_CONTATO,onAdicionar);
				this.addEventListener(ContatoEvent.EDITAR_CONTATO,onEditar);
				this.addEventListener(ContatoEvent.EXCLUIR_CONTATO,onExcluir);
			}
			
			private function onAdicionar(event:ContatoEvent):void
			{
				listagem.adicionarContato(event.contato, event.indice);
			}
			
			private function onEditar(event:ContatoEvent):void
			{
				dados.contato = event.contato;
				dados.indexContatoEditado = event.indice;
			}
			
			private function onExcluir(event:ContatoEvent):void
			{
				_contato = event.contato;
				contatoService.excluirContato(event.contato);
			}
			
			private function onListarContatosResult(event:ResultEvent = null):void
			{
				CursorManager.removeAllCursors(); 
				_listaContato.removeAll();
				_listaContato = event.result as ArrayCollection;
				listagem.setListaContato(_listaContato);
			}
			
			private function onListarContatosFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[ListarContatosFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");		
			}
			
			private function onSalvarContatoResult(event:ResultEvent = null):void
			{
				CursorManager.removeAllCursors(); 
				_contato = event.result as Contato;
				if(dados.contato.id == 0){
					_listaContato.addItem(_contato);
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','CONTATO_SALVAR_SUCESSO'), MessageType.SUCCESS, 10000));
				}else{
					var index:int = _listaContato.getItemIndex(dados.contato);
					_listaContato.removeItemAt(index);
					_listaContato.addItemAt(_contato, index);
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','CONTATO_EDITAR_SUCESSO'), MessageType.SUCCESS, 10000));
				}
				listagem.setListaContato(_listaContato);
				dados.limpar();
			}
			
			private function onSalvarContatoFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[SalvarAtividadeFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");
				var str:String = event.fault.faultString.substr(0,22);
				var i:Number;
				if(str == "br.com.sose.exceptions"){
					i = event.fault.faultString.indexOf(":");
					dispatchEvent(new MensagemEvent(event.fault.faultString.substring(i+1), MessageType.ERROR, 10000));
				}else{
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','CONTATO_SALVAR_ERRO'), MessageType.ERROR, 10000));	
				}			
			}
			
			private function onExcluirContatoResult(event:ResultEvent = null):void
			{
				CursorManager.removeAllCursors(); 
				var index:int = _listaContato.getItemIndex(_contato);
				_listaContato.removeItemAt(index);
				listagem.setListaContato(_listaContato);
				limpar();
				dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','CONTATO_REMOVER_SUCESSO'), MessageType.SUCCESS, 10000));
				
			}
			
			private function onExcluirContatoFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[ExcluirAtividadeFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");
				var str:String = event.fault.faultString.substr(0,22);
				var i:Number;
				if(str == "br.com.sose.exceptions"){
					i = event.fault.faultString.indexOf(":");
					dispatchEvent(new MensagemEvent(event.fault.faultString.substring(i+1), MessageType.ERROR, 10000));
				}else{
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','CONTATO_REMOVER_ERRO'), MessageType.ERROR, 10000));	
				}			
			}
			
			private function salvar(event:MouseEvent = null):void
			{
				if(dados.validarCampos()){
					contatoService.salvarContato(dados.contato);
				}else{
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','ERRO_VALIDACAO'), MessageType.WARNING, 10000));
				}
			}
			
			public function limpar(event:MouseEvent = null):void
			{
				_contato = new Contato();
				if(dados)
					dados.limpar();
				if(listagem)
					listagem.limpar();
			}
			
			public function get cliente():Pessoa
			{
				_cliente.contatos = listagem.listaContato;
				return _cliente;
			}
			
			public function set cliente(value:Pessoa):void
			{
				_cliente = value;
				if(value.contatos == null){
					listagem.listaContato = new ArrayCollection();
				}else{
					listagem.listaContato = value.contatos;
				}
			}
			
		]]>
	</fx:Script>
	
	<contato:DadosContato id="dados" width="100%" />
	
	<contato:ListagemContatoCadastrado id="listagem" width="100%" height="100%" />
	
	
	
</mx:VBox>


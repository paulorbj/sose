<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"  xmlns:dc="components.grid.filtros.controles.*"
		 xmlns:mx="library://ns.adobe.com/flex/mx"  initialize="initializeListagem()"
		 xmlns:components="components.*" width="100%" height="100%"
		 xmlns:grid="components.grid.*">
	
	<fx:Declarations>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import components.ConfirmarExclusaoModal;
			import components.RemoveModalEvent;
			
			import entities.administrativo.Encapsulamento;
			
			import modules.administrativo.encapsulamento.eventos.EncapsulamentoEvent;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.events.ListEvent;
			import mx.managers.CursorManager;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var listaEncapsulamento:ArrayCollection = new ArrayCollection;
			
			private var encapsulamento:Encapsulamento;
			
			[Bindable]
			private var listaEncapsulamentoCompleta:ArrayCollection = new ArrayCollection;
			
			[Bindable]
			private var listaFiltroEncapsulamento:ArrayCollection = new ArrayCollection;
			
			[Bindable]
			private var encapsulamentoSelecionada:String;
			
			private var sortEncapsulamento:mx.collections.Sort;
			
			private function initializeListagem():void
			{
				sortEncapsulamento = new Sort();
				sortEncapsulamento.fields=[new SortField("nome",true,false,false)];
			}
			
			private function sortListaEncapsulamento(lista:ArrayCollection):void
			{
				lista.sort = sortEncapsulamento;
				lista.refresh();
			}
			
			public function setListaEncapsulamento(lista:ArrayCollection):void
			{
				sortListaEncapsulamento(lista);
				listaEncapsulamento = lista;
				listaEncapsulamentoCompleta = new ArrayCollection();
				listaEncapsulamentoCompleta.addAll(listaEncapsulamento);
			}
			
			public function adicionarEncapsulamento(encapsulamento:Encapsulamento):void
			{
				var encapsulamentoAux:Encapsulamento = null;
				var encontrou:Boolean = false;
				for(var i:int=0; i<listaEncapsulamento.length; i++){
					encapsulamentoAux = listaEncapsulamento.getItemAt(i) as Encapsulamento; 
					if(encapsulamentoAux.id == encapsulamento.id){	
						var orcRepSub:Object = listaEncapsulamento.removeItemAt(i);
						listaEncapsulamento.addItemAt(encapsulamento,i);
						encontrou = true;
						break;
					}
				}
				if(!encontrou){
					listaEncapsulamento.addItem(encapsulamento);
				}
				
				for(var i:int=0; i<listaEncapsulamentoCompleta.length; i++){
					encapsulamentoAux = listaEncapsulamentoCompleta.getItemAt(i) as Encapsulamento; 
					if(encapsulamentoAux.id == encapsulamento.id){	
						var encapsulamentoSub:Object = listaEncapsulamentoCompleta.removeItemAt(i);
						listaEncapsulamentoCompleta.addItemAt(encapsulamento,i);
						encontrou = true;
						break;
					}
				}
				if(!encontrou){
					listaEncapsulamentoCompleta.addItem(encapsulamento);
				}
				
				sortListaEncapsulamento(listaEncapsulamento);
				sortListaEncapsulamento(listaEncapsulamentoCompleta);
			}
			
			public function editItem(data:Object, event:Event, edit:Boolean):void
			{					
				//for double click
				if(data==null && event is ListEvent){
					var event2:ListEvent = event as ListEvent						
					data = listaEncapsulamento.getItemAt(event2.rowIndex);				
				}
				
				dispatchEvent(new EncapsulamentoEvent(EncapsulamentoEvent.EDITAR_ENCAPSULAMENTO, data as Encapsulamento));
			}
			
			public function excluirItem(data:Object, event:Event, edit:Boolean):void
			{			
				encapsulamento = data as Encapsulamento;
				var modal:ConfirmarExclusaoModal=ConfirmarExclusaoModal(PopUpManager.createPopUp( this, ConfirmarExclusaoModal , true));
				modal.addEventListener(RemoveModalEvent.REMOVE_MODAL, excluir);
				PopUpManager.centerPopUp(modal);
				
			}
			
			private function excluir(event:RemoveModalEvent):void
			{
				dispatchEvent(new EncapsulamentoEvent(EncapsulamentoEvent.EXCLUIR_ENCAPSULAMENTO,encapsulamento));
				encapsulamento = null;
			}
			
			
			
		]]>
	</fx:Script>		
	
	<grid:MantisTable id="viewTable"
					  width="100%" height="100%"
					  draggableColumns="true"
					  dataProvider="{listaEncapsulamento}"
					  itemDoubleClick="editItem(data, event,false)"	>
		<grid:columns>
			
			<!-- CHANGE HERE THE ENTITY COLUMNS -->
			<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="nome" width=".40"
							   headerText = "{resourceManager.getString('ApplicationResource','NOME_ENCAPSULAMENTO')}"
							   textAlign="center"
							   sortable="false"
							   dataField="nome"							   
							   />
			
			<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="descricao" width=".50" textAlign="center"
							   headerText = "{resourceManager.getString('ApplicationResource','DESCRICAO')}"
							   dataField = "descricao"
							   />
			
			<!-- EDIT/REMOVE COLUMNS -->
			
			<mx:DataGridColumn headerText = "{resourceManager.getString('ApplicationResource','ACTION_COLUMN')}"	
							   draggable="false" width=".10" textAlign="center"	 						 
							   editable="false"
							   sortable="false">
				<mx:itemRenderer>
					<fx:Component>
						<mx:HBox horizontalAlign="center"
								 verticalAlign="middle"
								 >
							
							<mx:Image source="@Embed(source='/assets/icons/edit.png')"
									  click="parentDocument.editItem(data, event, true)"
									  buttonMode="true"
									  useHandCursor="true"
									  toolTip="{resourceManager.getString('ApplicationResource','EDIT')}"
									  />
							
							<mx:Image source="@Embed(source='/assets/icons/delete.png')"
									  click="parentDocument.excluirItem(data, event, true)"
									  buttonMode="true"
									  useHandCursor="true"
									  toolTip="{resourceManager.getString('ApplicationResource','EXCLUIR')}"
									  />
							
						</mx:HBox>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</grid:columns>
	</grid:MantisTable>
	
</mx:VBox>

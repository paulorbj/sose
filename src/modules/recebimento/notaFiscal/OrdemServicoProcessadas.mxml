<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:texto="components.textInput.*"
		 xmlns:componentes="components.*"
		 xmlns:combos="components.combos.*"
		 xmlns:grid="components.grid.*"
		 creationComplete="init()"
		 xmlns:mx="library://ns.adobe.com/flex/mx" height="100%" width="100%" paddingTop="10" >
	
	<fx:Declarations>
		<mx:RemoteObject concurrency="single" showBusyCursor="true" id="ordemServicoService" destination="ordemServicoService" endpoint="{resourceManager.getString('ConfigurationResource','amf')}">			
			<mx:method name="darGarantia"      
					   fault="onSubstituirFault(event)" 
					   result="onSubstituirResult(event)"
					   />
			<mx:method name="retirarGarantia"      
					   fault="onSubstituirFault(event)" 
					   result="onSubstituirResult(event)"
					   />
			<mx:method name="darExtensaoGarantia"      
					   fault="onSubstituirFault(event)" 
					   result="onSubstituirResult(event)"
					   />
			<mx:method name="retirarExtensaoGarantia"      
					   fault="onSubstituirFault(event)" 
					   result="onSubstituirResult(event)"
					   />
		</mx:RemoteObject>
	</fx:Declarations>
	
	<fx:Style>
		ApplicationControlBar{
			backgroundColor:#ACACAC;
			color: #323232;
		}
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import components.PopupModalController;
			import components.events.UserRegisterNumberModalEvent;
			import components.messages.MensagemEvent;
			import components.messages.MessageType;
			
			import entities.administrativo.Usuario;
			import entities.recebimento.ItemNotaFiscal;
			import entities.recebimento.NotaFiscal;
			import entities.recebimento.OrdemServico;
			
			import modules.view.Login;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.events.ListEvent;
			import mx.managers.CursorManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var _listaOrdemServico:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var _listaOrdemServicoEdicao:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var _ordemServico:OrdemServico;
			
			[Bindable]
			public var _notaFiscal:NotaFiscal;
			
			[Embed(source="/assets/icons/award_star_delete.png")]
			[Bindable]
			public var awardStarDelete:Class;
			
			[Embed(source="/assets/icons/award_star_add.png")]
			[Bindable]
			public var awardStarAdd:Class;
			
			[Embed(source="/assets/icons/time_delete.png")]
			[Bindable]
			public var timeDelete:Class;
			
			[Embed(source="/assets/icons/time_add.png")]
			[Bindable]
			public var timeAdd:Class;
			
			public function init():void
			{
			}
			
			public function ordenarLista():void
			{
				var sortA:Sort = new Sort();
				sortA.fields=[new SortField("osPaiOrdenar",false,false,true),new SortField("osFilhaOrdenar",false,false,true)];
				_listaOrdemServico.sort=sortA;
				
				_listaOrdemServico.refresh();
			}
			
			public function editItem(data:Object, event:Event, edit:Boolean):void
			{					
				//for double click
				if(data==null && event is ListEvent){
					var event2:ListEvent = event as ListEvent						
					data = _listaOrdemServico.getItemAt(event2.rowIndex);				
				}
				currentState = "visualizacao";
				_ordemServico = data as OrdemServico;
				_listaOrdemServicoEdicao.removeAll();
				_listaOrdemServicoEdicao.addItem(_ordemServico);
				observacoes.entidade = _ordemServico;
				observacoes.listarObservacoes();
			}
			
			public function adicionarOrdemServico(os:OrdemServico):void
			{
				var osAux:OrdemServico = null;
				var encontrou:Boolean = false;
				for(var i:int=0; i<_listaOrdemServico.length; i++){
					osAux = _listaOrdemServico.getItemAt(i) as OrdemServico; 
					if(osAux.id == os.id){	
						var orcRepSub:Object = _listaOrdemServico.removeItemAt(i);
						_listaOrdemServico.addItemAt(os,i);
						encontrou = true;
						break;
					}
				}
				if(!encontrou){
					_listaOrdemServico.addItem(os);
				}

				ordenarLista();
			}
			
			private function voltar(event:MouseEvent = null):void
			{
				currentState = "listagem";
			}
			
			public function retirarGarantia(data:Object=null, event:Event=null):void
			{
				if(data)
					_ordemServico = data as OrdemServico;
				
				var usr:Usuario = Login.usuarioAutenticado;
				if(usr){
					ordemServicoService.retirarGarantia(_ordemServico,usr);
				}else{
					PopupModalController.getInstance().showModalAutenticacaoUsuario(retirarGarantiaAutenticar);
				}
				
			}
			
			public function retirarGarantiaAutenticar(event:UserRegisterNumberModalEvent=null):void{
				retirarGarantia();
			}
			
			public function darGarantia(data:Object=null, event:Event=null):void
			{
				if(data)
					_ordemServico = data as OrdemServico;
				
				var usr:Usuario = Login.usuarioAutenticado;
				if(usr){
					ordemServicoService.darGarantia(_ordemServico,usr);
				}else{
					PopupModalController.getInstance().showModalAutenticacaoUsuario(darGarantiaAutenticar);
				}
			}
			
			public function darGarantiaAutenticar(event:UserRegisterNumberModalEvent=null):void{
				darGarantia();
			}
			
			public function darExtensaoGarantia(data:Object=null, event:Event=null):void
			{
				if(data)
					_ordemServico = data as OrdemServico;
				
				var usr:Usuario = Login.usuarioAutenticado;
				if(usr){
					ordemServicoService.darExtensaoGarantia(_ordemServico,usr);
				}else{
					PopupModalController.getInstance().showModalAutenticacaoUsuario(darExtensaoGarantiaAutenticar);
				}
				
			}
			
			public function darExtensaoGarantiaAutenticar(event:UserRegisterNumberModalEvent=null):void{
				darExtensaoGarantia();
			}
			
			public function retirarExtensaoGarantia(data:Object=null, event:Event=null):void
			{
				if(data)
					_ordemServico = data as OrdemServico;
				
				var usr:Usuario = Login.usuarioAutenticado;
				if(usr){
					ordemServicoService.retirarExtensaoGarantia(_ordemServico,usr);
				}else{
					PopupModalController.getInstance().showModalAutenticacaoUsuario(retirarExtensaoGarantiaAutenticar);
				}
			}
			
			public function retirarExtensaoGarantiaAutenticar(event:UserRegisterNumberModalEvent=null):void{
				retirarExtensaoGarantia();
			}
			
			public function labelGarantia(item:Object, column:DataGridColumn):String
			{
				if(item.garantia){
					return "Com garantia";
				}else{
					return "Sem garantia";
				}
			}
			
			public function labelExtensao(item:Object, column:DataGridColumn):String
			{
				if(item.estenderGarantia){
					return "Com extensão";
				}else{
					return "Sem extensão";
				}
			}
			
			public function onSubstituirFault(event:FaultEvent):void
			{
				CursorManager.removeAllCursors();
				trace("[VerificarGarantiaFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");
				dispatchEvent(new MensagemEvent("Erro ao realizar a operação", MessageType.ERROR, 5000));
			}
			
			public function onSubstituirResult(event:ResultEvent):void
			{
				var os:OrdemServico = event.result as OrdemServico;
				adicionarOrdemServico(os);
				if(os.placasFilhas != null && os.placasFilhas.length > 0){
					for each(var osFilha:OrdemServico in os.placasFilhas){
						adicionarOrdemServico(osFilha);
					}
				}
				dispatchEvent(new MensagemEvent("Operação realizada com sucesso", MessageType.SUCCESS, 5000));
			}

			public function get listaOrdemServico():ArrayCollection
			{
				return _listaOrdemServico;
			}

			public function set listaOrdemServico(value:ArrayCollection):void
			{
				_listaOrdemServico = value;
				ordenarLista();
			}

			
		]]>
	</fx:Script>
	
	<fx:Binding source="itemNota.inputText" destination="_ordemServico.itemNotaFiscal.nome" twoWay="true" />
	<fx:Binding source="unidadeServilogi.inputText" destination="_ordemServico.unidade.nome" twoWay="true" />
	<!--<fx:Binding source="unidadeLpu.inputText" destination="_ordemServico.lpu.unidade" twoWay="true" />-->
	<fx:Binding source="fabricante.inputText" destination="_ordemServico.unidade.fabricante.nome" twoWay="true" />
	<fx:Binding source="equipamento.inputText" destination="_ordemServico.unidade.equipamento.nome" twoWay="true" />
	<fx:Binding source="laboratorio.inputText" destination="_ordemServico.unidade.laboratorio.nome" twoWay="true" />
	<fx:Binding source="nOrdemServico.inputText" destination="_ordemServico.numeroOrdemServico" twoWay="true" />
	<fx:Binding source="nSerie.inputText" destination="_ordemServico.serieFabricante" twoWay="true" />
	<fx:Binding source="nCliente.inputText" destination="_ordemServico.serieCliente" twoWay="true" />
	<fx:Binding source="nOSCliente.inputText" destination="_ordemServico.ordemServicoCliente" twoWay="true" />
	
	<mx:states>
		<s:State name="listagem"/>
		<s:State name="visualizacao"/>
	</mx:states>
	
		<grid:MantisTable id="viewTable"
						  width="100%"
						  height="100%"
						  height.visualizacao="50"
						  draggableColumns="true"
						  horizontalScrollPolicy.visualizacao="off"
						  verticalScrollPolicy.visualizacao="off"
						  dataProvider="{_listaOrdemServico}"
						  dataProvider.visualizacao="{_listaOrdemServicoEdicao}">
			<grid:columns>
				
				<!-- CHANGE HERE THE ENTITY COLUMNS -->
				
				
				<mx:DataGridColumn id="cNumOrdemServico"
								   headerText = "{resourceManager.getString('ApplicationResource','NUMERO_ORDEM_SERVICO')}"
								   textAlign="center"
								   sortable="false" width=".05"
								   dataField="numeroOrdemServico"							   
								   />
				
				<mx:DataGridColumn id="cNumOrdemServicoPai"
								   headerText = "{resourceManager.getString('ApplicationResource','NUMERO_ORDEM_SERVICO_PAI')}"
								   textAlign="center"
								   sortable="false" width=".05"
								   dataField="unidadePai.numeroOrdemServico"							   
								   />
				
				<mx:DataGridColumn id="cStatus"
								   headerText = "{resourceManager.getString('ApplicationResource','STATUS')}"
								   textAlign="center"
								   sortable="false" width=".10"
								   dataField="statusString"							   
								   />
				
				<mx:DataGridColumn id="cUnidade" dataField="unidade.nome"
								   headerText = "{resourceManager.getString('ApplicationResource','UNIDADE')}"
								   textAlign="center" width=".10"
								   sortable="false"					   
								   />
				
				<mx:DataGridColumn id="cNumSerie" dataField="serieFabricante"
								   headerText = "{resourceManager.getString('ApplicationResource','NUMERO_SERIE')}"
								   textAlign="center" width=".08"
								   sortable="false"							   
								   />
				
				<mx:DataGridColumn id="cNumCliente" 
								   headerText = "{resourceManager.getString('ApplicationResource','NUMERO_CLIENTE')}"
								   dataField = "serieCliente"
								   width=".08"
								   />
				
				<mx:DataGridColumn id="cNumOSCliente" 
								   headerText = "{resourceManager.getString('ApplicationResource','NUMERO_ORDEM_CLIENTE')}"
								   dataField = "ordemServicoCliente"
								   width=".10"
								   />
				
				<mx:DataGridColumn id="cLaboratorio" 
								   headerText = "{resourceManager.getString('ApplicationResource','LABORATORIO')}"
								   dataField = "unidade.laboratorio.nome"
								   width=".10"
								   />
				
				<mx:DataGridColumn id="cFabricante" 
								   headerText = "{resourceManager.getString('ApplicationResource','FABRICANTE')}"
								   dataField = "unidade.fabricante.nome"
								   width=".10"
								   />
				
				<mx:DataGridColumn id="cEquipamento" 
								   headerText = "{resourceManager.getString('ApplicationResource','EQUIPAMENTO')}"
								   dataField = "unidade.equipamento.nome"
								   width=".10"
								   />
				
				<mx:DataGridColumn id="cLpu" 
								   headerText = "{resourceManager.getString('ApplicationResource','LPU')}"
								   dataField = "lpu.unidade"
								   width=".10"
								   />
				
				<mx:DataGridColumn id="cGarantia" 
								   headerText = "Garantia"
								   labelFunction="labelGarantia"
								   width=".08"
								   />
				
				<mx:DataGridColumn id="cExtensao" 
								   headerText = "Extensao"
								   labelFunction="labelExtensao"
								   width=".08"
								   />
				
				<!-- EDIT/REMOVE COLUMNS -->
				
				<mx:DataGridColumn headerText = "{resourceManager.getString('ApplicationResource','ACTION_COLUMN')}"	
								   draggable="false" excludeFrom="visualizacao"						 
								   editable="false" width=".08"
								   sortable="false">
					<mx:itemRenderer>
						<fx:Component>
							<mx:HBox horizontalAlign="center"
									 verticalAlign="middle"
									 >								
								<mx:Image source="@Embed(source='/assets/icons/edit.png')"
										  click="parentDocument.editItem(data, event, true)"
										  buttonMode="true" 
										  useHandCursor="true" enabled="{parentDocument._notaFiscal.statusString != 'Finalizada'}"
										  toolTip="{resourceManager.getString('ApplicationResource','EDIT')}"
										  />
								<mx:Image source="{data.garantia ? parentDocument.awardStarDelete : parentDocument.awardStarAdd}"
										  click="{data.garantia ? parentDocument.retirarGarantia(data, event) : parentDocument.darGarantia(data, event)}"
										  buttonMode="true" visible="{data.isVisibleGarantiaExtensao}"
										  useHandCursor="true" enabled="{parentDocument._notaFiscal.statusString != 'Finalizada'}"
										  toolTip="{data.garantia ? 'Retirar garantia' : 'Dar garantia'}"
										  />	
								
								<mx:Image source="{data.estenderGarantia ? parentDocument.timeDelete : parentDocument.timeAdd}"
										  click="{data.estenderGarantia ? parentDocument.retirarExtensaoGarantia(data, event) : parentDocument.darExtensaoGarantia(data, event)}"
										  buttonMode="true" visible="{data.isVisibleGarantiaExtensao}"
										  useHandCursor="true" enabled="{parentDocument._notaFiscal.statusString != 'Finalizada'}"
										  toolTip="{data.estenderGarantia ? 'Retirar extensão de garantia' : 'Estender garantia'}"
										  />
								
							</mx:HBox>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</grid:columns>
		</grid:MantisTable>				

	
	<mx:VBox includeIn="visualizacao" width="100%" cornerRadius="3" borderStyle="solid" borderThickness="1" paddingTop="10" paddingLeft="10" paddingBottom="10" paddingRight="10">
		<mx:HBox width="100%" verticalAlign="middle">
			<s:Label text="Status:" />
			<s:Label id="statusOS" fontSize="20" color="red" text="{_ordemServico.statusString}" />
		</mx:HBox>
		<mx:HBox width="100%" verticalAlign="bottom">
			<texto:TextInput id="itemNota" labelText="{resourceManager.getString('ApplicationResource','ITEM_NOTA_FISCAL')}" width="33.33%" habilitado="false" />
			<texto:TextInput id="unidadeServilogi" labelText="{resourceManager.getString('ApplicationResource','UNIDADE_SERVILOGI')}" width="33.33%" habilitado="false" />
			<texto:TextInput id="unidadeLpu" labelText="{resourceManager.getString('ApplicationResource','UNIDADE_LPU')}" width="33.33%" habilitado="false" />
		</mx:HBox>
		<mx:HBox width="100%" verticalAlign="bottom">
			<texto:TextInput id="fabricante" labelText="{resourceManager.getString('ApplicationResource','FABRICANTE')}" width="33.33%" habilitado="false" />
			<texto:TextInput id="equipamento" labelText="{resourceManager.getString('ApplicationResource','EQUIPAMENTO')}" width="33.33%" habilitado="false" />
			<texto:TextInput id="laboratorio" labelText="{resourceManager.getString('ApplicationResource','LABORATORIO')}" width="33.33%" habilitado="false" />
		</mx:HBox>
		<mx:HBox width="100%" verticalAlign="bottom">
			<texto:TextInput id="nOrdemServico" labelText="{resourceManager.getString('ApplicationResource','NUMERO_ORDEM_SERVICO')}" width="25%" habilitado="false" />
			<texto:TextInput id="nSerie" labelText="{resourceManager.getString('ApplicationResource','NUMERO_SERIE')}" width="25%" habilitado="false" />
			<texto:TextInput id="nCliente" labelText="{resourceManager.getString('ApplicationResource','NUMERO_CLIENTE')}" width="25%" habilitado="false" />
			<texto:TextInput id="nOSCliente" labelText="{resourceManager.getString('ApplicationResource','NUMERO_ORDEM_CLIENTE')}" width="25%" habilitado="false" />
		</mx:HBox>
		<mx:HBox width="100%" verticalAlign="bottom">
			<componentes:Observacoes id="observacoes" origem="Recebimento" />
		</mx:HBox>
		<mx:HBox width="100%" excludeFrom="listagem" horizontalAlign="left">
			<mx:Button id="btVoltar"
					   label="{resourceManager.getString('ApplicationResource','VOLTAR')}"
					   height="25"
					   icon="@Embed(source='/assets/icons/back.png')"
					   click="voltar(event)"
					   />
		</mx:HBox>
	</mx:VBox>	
</mx:VBox>

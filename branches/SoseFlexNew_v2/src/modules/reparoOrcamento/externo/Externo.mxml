<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%"
		 paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10"
		 xmlns:texto="components.textInput.*" 
		 xmlns:componentes="components.*" 
		 xmlns:combos="components.combos.*"
		 xmlns:combo="components.*" 
		 xmlns:grid="components.grid.*"
		 creationComplete="onCreationComplete()">
	

	
	
	<fx:Declarations>
		
		<mx:RemoteObject id="pessoaService" destination="pessoaService" endpoint="{resourceManager.getString('ConfigurationResource','amf')}">			
<!--			<mx:method name="salvarPessoa"      
					   fault="onSalvarFornecedorFault(event)" 
					   result="onSalvarFornecedorResult(event)"
					   />-->
			<mx:method name="listarPrestadoresServico"      
					   fault="onListarPrestadoresServicoFault(event)" 
					   result="onListarPrestadoresServicoResult(event)"
					   />
		</mx:RemoteObject>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import entities.administrativo.parceiros.Pessoa;
			import entities.orcamentoreparo.OrcRepGenerico;
			import entities.orcamentoreparo.Reparo;
			import entities.orcamentoreparo.Externo;
			import entities.administrativo.Observacao;
			import modules.administrativo.parceiros.pessoa.CadastroPessoaModal;
			import entities.administrativo.Usuario;
			import entities.administrativo.parceiros.Endereco;
			import entities.administrativo.parceiros.Contato;
			
			import modules.administrativo.parceiros.contato.eventos.ContatoEvent;
			import modules.administrativo.parceiros.endereco.eventos.EnderecoEvent;
			import modules.view.Login;
			
			import mx.collections.ArrayCollection;
			import mx.containers.TitleWindow;
			import mx.managers.CursorManager;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;
			
			import utils.TipoPessoa;
			
			private var _pessoa:Pessoa;
			
			[Bindable]
			public var listaEndereco:ArrayCollection = new ArrayCollection;
			
			private var endereco:Endereco;
			
			public var listaContato:ArrayCollection = new ArrayCollection;
			
			private var contato:Contato;
			
			[Bindable]
			public var habilitado:Boolean = true;
			
			[Bindable]
			private var _observacao:Observacao = new Observacao();
			
			[Bindable]
			private var _listaObservacao:ArrayCollection = new ArrayCollection();
			
			private var _orcRep:OrcRepGenerico
			
			private var _externo:Externo
			
			[Bindable]
			public var changeFunction:Function = null;
			
			[Bindable]
			public var required:Boolean = false;
			
			
			public function editItem(data:Object, event:Event, edit:Boolean):void
			{					
				//for double click
				if(data==null && event is ListEvent){
					var event2:ListEvent = event as ListEvent						
					data = listaContato.getItemAt(event2.rowIndex);				
				}
				
				var index:int = listaContato.getItemIndex(data);
				dispatchEvent(new ContatoEvent(ContatoEvent.EDITAR_CONTATO, data as Contato, index));
			}
			
			public function setListaEndereco(lista:ArrayCollection):void
			{
				listaEndereco = lista;
			}
			
			public function labelFunction(item:Object, column:DataGridColumn):String
			{
				return (item as Endereco).logradouro + ", " + (item as Endereco).numero;
			}
			
			
		/* 	public function editItem(data:Object, event:Event, edit:Boolean):void
			{					
				//for double click
				if(data==null && event is ListEvent){
					var event2:ListEvent = event as ListEvent						
					data = listaEndereco.getItemAt(event2.rowIndex);				
				}
				
				var index:int = listaEndereco.getItemIndex(data);
				dispatchEvent(new EnderecoEvent(EnderecoEvent.EDITAR_ENDERECO, data as Endereco, index));
			}
			 */
			[Bindable]
			public function get orcRep():OrcRepGenerico
			{
				return _orcRep;
			}
			
			public function set orcRep(value:OrcRepGenerico):void
			{
				_orcRep = value;	
			}
			
			private function cancelarFornecedor(event:MouseEvent=null):void
			{
				this.currentState = "normal";
				_pessoa = new Pessoa();
			}
			
			private function validateAdicionar():Boolean {	
/* 				validatorArr = new Array();
				validatorArr.push(txtObservacao.stringValidator);
				var validatorErrorArray:Array = Validator.validateAll(validatorArr);;
				var isValidForm:Boolean = validatorErrorArray.length == 0; */
				
				return true;
			}
			
			public function adicionarObservacao(event:MouseEvent = null):void
			{	
				if(validateAdicionar()){
					var usr:Usuario = Login.usuarioAutenticado;
					if(usr){
						_observacao.usuario = Login.usuarioAutenticado;
						/* _observacao.origem = origem; */
						_observacao.escopo = 3;
					/* 	_observacao.texto = txtObservacao.inputText; */
						/* _observacao.sigiloso = sigiloso.selected; */
						_observacao.data = new Date();
						//setarEntidade(_entidade);						
						//observacaoService.salvarObservacao(_observacao);
					}else{
						//PopupModalController.getInstance().showModalAutenticacaoUsuario(onAdicionarObservacaoAutenticar);
					}
				}
			}

			public function onSalvarFornecedorFault(event:FaultEvent):void
			{
				CursorManager.removeAllCursors();
				trace("[ListarLpuPorClienteFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");
				cancelarFornecedor();
				//dispatchEvent(new MensagemEvent("Erro ao adicionar fornecedor", MessageType.SUCCESS, 10000));
			}
			
/* 			public function onSalvarFornecedorResult(event:ResultEvent):void
			{
				_pessoa = event.result as Pessoa;
				cbFornecedor.comboBox.dataProvider.addItem(_pessoa);
				cbFornecedor.fornecedorSelecionado = _pessoa;
				this.currentState = "normal";
				//dispatchEvent(new MensagemEvent("Fornecedor adicionado com sucesso", MessageType.SUCCESS, 10000));
			} */
			

			
			public function get pessoa():Pessoa
			{
				return _pessoa;
			}
			
			public function set pessoa(value:Pessoa):void
			{
				_pessoa = value;
/* 				if(_pessoa != null && !isNaN(_pessoa.id) && _pessoa.id != 0 ){
					if(_pessoa.tipoPessoa){
						tipoPessoa.setTipoPessoaSelecionado(_pessoa.tipoPessoa);
						atualiza();
					}
				} */
				
			}
			
/* 			public function atualizarComboFornecedor(event:Event):void{
				pessoa = cbFornecedor.fornecedorSelecionado;
			} */

			private function onCreationComplete():void
			{
				pessoaService.listarPrestadoresServico();
				comboBox.labelField = "nomeSistema";
				comboBox.textoPadrao = "Selecione um prestador...";
			}
			
			private function onListarPrestadoresServicoResult(event:ResultEvent = null):void
			{
				comboBox.dataProvider = event.result as ArrayCollection;
			}
			
			private function onListarPrestadoresServicoFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[Inicializao do combo prestador servico] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");		
			}
			
			public function get prestadorServicoSelecionado():Pessoa 
			{
				if(comboBox.selectedItem == null)
					return null;
				else
					return comboBox.selectedItem as Pessoa; 
			}
			
			public function get prestadorServicoEndereco1():String
			{
				if(comboBox.selectedItem == null)
					return null;
				else
					return comboBox.selectedItem.enderecos as String;
			}
			
			public function get prestadorServicoTelefone1():String
			{
				if(comboBox.selectedItem == null)
					return null;
				else
					return comboBox.selectedItem.telefones as String;
			}
			
			public function set prestadorServicoSelecionado(prestadorServico:Pessoa):void 
			{
				comboBox.selectedItem = prestadorServico;
			}

		]]>
	</fx:Script>
	
	<!--<fx:Binding source="unidade.inputText" destination="orcRep.ordemServico.unidade.nome" twoWay="true" />
	<fx:Binding source="fornecedor.inputText" destination="orcRep.ordemServico.unidade.prestadorServicoExterno.nomeSistema" twoWay="true" />
	<fx:Binding source="fabricante.inputText" destination="orcRep.ordemServico.unidade.fabricante.nome" twoWay="true" />
	<fx:Binding source="equipamento.inputText" destination="orcRep.ordemServico.unidade.equipamento.nome" twoWay="true" />
	<fx:Binding source="laboratorio.inputText" destination="orcRep.ordemServico.unidade.laboratorio.nome" twoWay="true" />
	<fx:Binding source="tecnico.inputText" destination="orcRep.tecnicoResponsavel.usuario" twoWay="true" />-->
	<!--<fx:Binding source="enderecoPrestador.inputText" destination="prestadorServicoEndereco1" twoWay="true" />
	<fx:Binding source="telefonePrestador.inputText" destination="prestadorServicoTelefone1" twoWay="true" />-->
	
	
	<!--<fx:Binding source="razaoFornecedor.inputText" destination="comboBox.selectedItem.nome" twoWay="true" />-->
	<fx:Binding source="nfRetornoExterno.inputText" destination="orcRep.ordemServico.serieCliente" twoWay="true" />
	<fx:Binding source="nOSCliente.inputText" destination="orcRep.ordemServico.ordemServicoCliente" twoWay="true" />
	
	<!--<fx:Binding source="nClienteAvaya.inputText" destination="orcRep.ordemServico.clienteAvaya" twoWay="true" />
	<fx:Binding source="nCaseAvaya.inputText" destination="orcRep.ordemServico.caseAvaya" twoWay="true" />-->
	<!--<fx:Binding source="cliente.inputText" destination="orcRep.ordemServico.cliente.nomeSistema" twoWay="true" />-->
	
	<mx:states>
		<s:State name="editar"/>
		<s:State name="visualizar"/>
	</mx:states>
	
	<mx:HBox verticalAlign="middle" width="100%">
		<!--<combos:ComboFornecedor id="cbFornecedor" labelText="Fornecedor" width="25%" enabled="true" changeFunction="atualizarComboFornecedor"  />-->
		
<!--		<s:Spacer width="100%" />
		<s:Label text="Status:" />
		<s:Label id="statusOrcRep" fontSize="20" color="red" text="{orcRep.statusString}" />-->
	</mx:HBox>

	<!--<mx:HBox verticalAlign="middle" width="100%">
		<texto:TextInput id="tecnico" labelText="{resourceManager.getString('ApplicationResource','TECNICO')}" width="10%" habilitado="false" />
		<texto:TextInput id="laboratorio" labelText="{resourceManager.getString('ApplicationResource','LABORATORIO')}" width="15%" habilitado="false" />
		<texto:TextInput id="unidade" labelText="{resourceManager.getString('ApplicationResource','UNIDADE')}" width="30%" habilitado="false" />
		<texto:TextInput id="fornecedor" labelText="Prestador de serviço" width="15%" habilitado="false" />
		<texto:TextInput id="fabricante" labelText="{resourceManager.getString('ApplicationResource','FABRICANTE')}" width="15%" habilitado="false" />
		<texto:TextInput id="equipamento" labelText="{resourceManager.getString('ApplicationResource','EQUIPAMENTO')}" width="15%" habilitado="false" />
	</mx:HBox>-->
	
	
	<mx:HBox verticalAlign="bottom" width="100%" height="100%">
		<grid:MantisTable id="tabelaExterno"
						  width="100%"
						  height="100%"
						  draggableColumns="true"
						  variableRowHeight="true"
						  dataProvider="{_listaObservacao}">
			<grid:columns>
				
				<!-- CHANGE HERE THE ENTITY COLUMNS -->
				
				
				<mx:DataGridColumn id="cData" width=".13"
								   headerText = "{resourceManager.getString('ApplicationResource','DATA')}"
								   textAlign="center"
								   sortable="false"
								   dataField="dataString"							   
								   />
				<mx:DataGridColumn id="cTexto" dataField="texto" width=".20"
								   headerText = "Usuário"
								   textAlign="left" wordWrap="true"
								   sortable="false"							   
								   />
				
				<mx:DataGridColumn id="cOrigem" dataField="origem" width=".30"
								   headerText = "Prestador de Serviço"
								   textAlign="center"
								   sortable="false"					   
								   />

				<mx:DataGridColumn id="cnfSaida" dataField="usuario.usuario" width=".20"
								   headerText = "NF SAIDA"
								   textAlign="center"
								   sortable="false"					   
								   />
				
				<mx:DataGridColumn id="cnfRetorno" dataField="texto" width=".20"
								   headerText = "NF Retorno"
								   textAlign="left" wordWrap="true"
								   sortable="false"							   
								   />
				
				<mx:DataGridColumn id="obss" dataField="texto" width=".40"
								   headerText = "Observações"
								   textAlign="left" wordWrap="true"
								   />
				<!-- EDIT/REMOVE COLUMNS -->
				
			</grid:columns>
		</grid:MantisTable>	
			
	</mx:HBox>
	
	<mx:HBox verticalAlign="bottom" width="100%">
		<!--<componentes:TextAreaInput width="70%" id="txtObservacao"  enabled="{habilitado}" required="true"
								   heightInLines="2" labelText="{resourceManager.getString('ApplicationResource','OBSERVACAO')}" />-->
	<!--	<mx:CheckBox id="sigiloso" label="Sigiloso" />-->
		
		
		<combo:ComboBoxInput id="comboBox" labelText="Selecione o Prestador de Serviço" required="{required}" change="{changeFunction}" width="40%" />
		<texto:TextInput id="nfSaidaExterno" labelText="NF de Saida" width="20%" habilitado="true" />
		<mx:Button id="btAdicionarNFS" enabled="{habilitado}"
				   label="Salvar NF Saída"
				   height="32" width="20%"
				   icon="@Embed(source='/assets/icons/add.png')"
				   click="adicionarObservacao(event)"
				   />
		
		
	</mx:HBox>
	
	<mx:HBox verticalAlign="bottom" width="100%">
		
		
		<texto:TextInput id="nfRetornoExterno" labelText="NF de Retorno" width="60%" habilitado="false" />

		<mx:Button id="btAdicionarNFR" enabled="{habilitado}"
				   label="Salvar NF Retorno"
				   height="32" width="20%"
				   icon="@Embed(source='/assets/icons/add.png')"
				   click="adicionarObservacao(event)"
				   />
		
		
	</mx:HBox>
	
	<mx:HBox verticalAlign="bottom" width="100%">
		
		
		<texto:TextInput id="nOSCliente" labelText="Observaçoes" width="60%" habilitado="true" />
		<mx:Button id="btAdicionarObservacao" enabled="{habilitado}"
				   label="Salvar Observação"
				   height="32" width="20%"
				   icon="@Embed(source='/assets/icons/add.png')"
				   click="adicionarObservacao(event)"
				   />
		
		
	</mx:HBox>
	
<!--	<mx:HBox verticalAlign="middle" width="100%">
		
			<texto:TextInput id="nCaseAvaya" labelText="Unidade avaya" width="14%" habilitado="false" />
		<texto:TextInput id="nClienteAvaya" labelText="Case avaya" width="14%" habilitado="false" />
		<texto:TextInput id="cliente" labelText="{resourceManager.getString('ApplicationResource','CLIENTE')}" width="40%" habilitado="false" />
	</mx:HBox>
-->
	<!--<texto:TextInput id="razaoFornecedor" labelText="Nome do fornecedor" width="30%" habilitado="true" />
	<texto:TextInput id="enderecoPrestador" labelText="Endereço cadastrado" width="40%" habilitado="false" />
	<texto:TextInput id="telefonePrestador" labelText="Telefone" width="25%" habilitado="false" />-->

	<grid:MantisTable id="fornecedorTable"
					  width="100%"
					  height="100%"
					  draggableColumns="true"
					  dataProvider="{listaEndereco}" >
					 <!-- itemDoubleClick="editItem(data, event,false)"	-->
					  
		<grid:columns>
			
			
			<mx:DataGridColumn headerText = "{resourceManager.getString('ApplicationResource','TIPO')}"	
							   draggable="false" width="70"	textAlign="center"						 
							   editable="false"
							   sortable="false">
				<mx:itemRenderer>
					<fx:Component>
						<mx:HBox horizontalAlign="center"
								 verticalAlign="middle"
								 >
							
							<mx:Image source="@Embed(source='/assets/icons/house.png')" visible="{data.enderecoComercial}"
									  toolTip="{resourceManager.getString('ApplicationResource','COMERCIAL')}"
									  />
							
							<mx:Image source="@Embed(source='/assets/icons/money_dollar.png')" visible="{data.enderecoCobranca}"
									  toolTip="{resourceManager.getString('ApplicationResource','COBRANCA')}"
									  />
							
							<mx:Image source="@Embed(source='/assets/icons/car.png')" visible="{data.enderecoEntrega}"
									  toolTip="{resourceManager.getString('ApplicationResource','ENTREGA')}"
									  />
							
						</mx:HBox>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
	
	<mx:DataGridColumn id="razaoSocial" labelFunction="labelFunction"
					   headerText = "Razão Social"
					   textAlign="center" width="200"
					   sortable="false"
					   dataField="logradouro"							   
					   />
	<mx:DataGridColumn id="nomeContato" labelFunction="labelFunction"
						headerText = "Contato"
					  	textAlign="center" width="120"
						sortable="false"
						dataField="logradouro"							   
						/>
	<mx:DataGridColumn id="logradouro" labelFunction="labelFunction"
					   headerText = "{resourceManager.getString('ApplicationResource','LOGRADOURO')}"
					   textAlign="center" width="200"
					   sortable="false"
					   dataField="logradouro"							   
					   />
	
	<mx:DataGridColumn id="cep" textAlign="center"
					   headerText = "{resourceManager.getString('ApplicationResource','CEP')}"
					   dataField = "cep"
					   width="80"
					   />
	
	<mx:DataGridColumn id="cidade" textAlign="center"
					   headerText = "{resourceManager.getString('ApplicationResource','CIDADE')}"
					   dataField = "cidade"
					   width="130"
					   />
	
	<mx:DataGridColumn id="estado" textAlign="center"
					   headerText = "{resourceManager.getString('ApplicationResource','ESTADO')}"
					   dataField = "estado"
					   width="80"
					   />
	
	<mx:DataGridColumn id="telefone" textAlign="center"
					   headerText = "{resourceManager.getString('ApplicationResource','TELEFONE')}"
					   dataField = "telefone"
					   width="100"
					   />
		</grid:columns>
	</grid:MantisTable>
	
	<grid:MantisTable id="contatoTable"
					  width="100%"
					  height="100%"
					  draggableColumns="true"
					  dataProvider="{listaContato}"
					  itemDoubleClick="editItem(data, event,false)"	>
		<grid:columns>
			
			<!-- CHANGE HERE THE ENTITY COLUMNS -->
			<mx:DataGridColumn id="nome"
							   headerText = "{resourceManager.getString('ApplicationResource','NOME_CONTATO')}"
							   textAlign="center"
							   sortable="false"
							   dataField="nome"							   
							   />
			
			<mx:DataGridColumn id="cargo" 
							   headerText = "{resourceManager.getString('ApplicationResource','CARGO_CONTATO')}"
							   dataField = "cargo"
							   />
			
			<mx:DataGridColumn id="email" 
							   headerText = "{resourceManager.getString('ApplicationResource','EMAIL_CONTATO')}"
							   dataField = "email"
							   />
			
			<mx:DataGridColumn id="departamento" 
							   headerText = "{resourceManager.getString('ApplicationResource','DEPARTAMENTO_CONTATO')}"
							   dataField = "departamento"
							   />
			
			<mx:DataGridColumn id="infoAdicionais" 
							   headerText = "{resourceManager.getString('ApplicationResource','INFO_ADICIONAIS_CONTATO')}"
							   dataField = "informacoesAdicionais"
							   />
			
			<mx:DataGridColumn id="pessoa2" 
							   headerText = "{resourceManager.getString('ApplicationResource','PESSOA')}"
							   dataField = "cliente.nome"
							   />
			
			<!-- EDIT/REMOVE COLUMNS -->
			
			<!--<mx:DataGridColumn headerText = "{resourceManager.getString('ApplicationResource','ACTION_COLUMN')}"	
							   draggable="false"							 
							   editable="false"
							   sortable="false">
				<mx:itemRenderer>
					<fx:Component>
						<mx:HBox horizontalAlign="center"
								 verticalAlign="middle"
								 >
							
							<mx:Image source="@Embed(source='/assets/icons/edit.png')"
									  click="parentDocument.editItem(data, event, true)"
									  buttonMode="true"
									  useHandCursor="true"
									  toolTip="{resourceManager.getString('ApplicationResource','EDIT')}"
									  />
							
							<mx:Image source="@Embed(source='/assets/icons/delete.png')"
									  click="parentDocument.excluirItem(data, event, true)"
									  buttonMode="true"
									  useHandCursor="true"
									  toolTip="{resourceManager.getString('ApplicationResource','EXCLUIR')}"
									  />
							
						</mx:HBox>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>-->
		</grid:columns>

	</grid:MantisTable>
	<mx:HBox verticalAlign="bottom" width="100%">
		
		
		<mx:Button id="btlimpar" enabled="{habilitado}"
				   label="Novo Fornecedor"
				   height="40" width="20%"
				   icon="@Embed(source='/assets/icons/add.png')"
				   click="adicionarObservacao(event)"
				   />
		
		
	</mx:HBox>
</mx:VBox>

<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"  xmlns:dc="components.grid.filtros.controles.*"
		 xmlns:mx="library://ns.adobe.com/flex/mx" initialize="initializeListagem()"
		 xmlns:components="components.*" width="100%" height="100%"
		 xmlns:grid="components.grid.*">
	
	<fx:Declarations>

	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import components.ConfirmarExclusaoModal;
			import components.RemoveModalEvent;
			
			import entities.administrativo.Equipamento;
			
			import modules.administrativo.equipamento.eventos.EquipamentoEvent;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.events.ListEvent;
			import mx.managers.CursorManager;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
		
			[Bindable]
			private var listaEquipamento:ArrayCollection = new ArrayCollection;
			
			private var equipamento:Equipamento;
			
			[Bindable]
			private var listaEquipamentoCompleta:ArrayCollection = new ArrayCollection;
			
			[Bindable]
			private var listaFiltroEquipamento:ArrayCollection = new ArrayCollection;
			
			[Bindable]
			private var equipamentoSelecionada:String;
			
			private var sortEquipamento:mx.collections.Sort;
			
			private function initializeListagem():void
			{
				sortEquipamento = new Sort();
				sortEquipamento.fields=[new SortField("nome",true,false,false)];
			}
			
			private function sortListaEquipamento(lista:ArrayCollection):void
			{
				lista.sort = sortEquipamento;
				lista.refresh();
			}
			
			
			public function setListaEquipamento(lista:ArrayCollection):void
			{
				if(lista){
					sortListaEquipamento(lista);
				listaEquipamento = lista;
				listaEquipamentoCompleta = new ArrayCollection();
				listaEquipamentoCompleta.addAll(listaEquipamento);
				}
			}
			
			public function adicionarEquipamento(equipamento:Equipamento):void
			{
				var equipamentoAux:Equipamento = null;
				var encontrou:Boolean = false;
				for(var i:int=0; i<listaEquipamento.length; i++){
					equipamentoAux = listaEquipamento.getItemAt(i) as Equipamento; 
					if(equipamentoAux.id == equipamento.id){	
						var orcRepSub:Object = listaEquipamento.removeItemAt(i);
						listaEquipamento.addItemAt(equipamento,i);
						encontrou = true;
						break;
					}
				}
				if(!encontrou){
					listaEquipamento.addItem(equipamento);
				}
				
				for(var i:int=0; i<listaEquipamentoCompleta.length; i++){
					equipamentoAux = listaEquipamentoCompleta.getItemAt(i) as Equipamento; 
					if(equipamentoAux.id == equipamento.id){	
						var equipamentoSub:Object = listaEquipamentoCompleta.removeItemAt(i);
						listaEquipamentoCompleta.addItemAt(equipamento,i);
						encontrou = true;
						break;
					}
				}
				if(!encontrou){
					listaEquipamentoCompleta.addItem(equipamento);
				}
				
				sortListaEquipamento(listaEquipamento);
				sortListaEquipamento(listaEquipamentoCompleta);
			}
			
			public function editItem(data:Object, event:Event, edit:Boolean):void
			{					
				//for double click
				if(data==null && event is ListEvent){
					var event2:ListEvent = event as ListEvent						
					data = listaEquipamento.getItemAt(event2.rowIndex);				
				}
				
				dispatchEvent(new EquipamentoEvent(EquipamentoEvent.EDITAR_EQUIPAMENTO, data as Equipamento));
			}

			public function excluirItem(data:Object, event:Event, edit:Boolean):void
			{			
				equipamento = data as Equipamento;
				var modal:ConfirmarExclusaoModal=ConfirmarExclusaoModal(PopUpManager.createPopUp( this, ConfirmarExclusaoModal , true));
				modal.addEventListener(RemoveModalEvent.REMOVE_MODAL, excluir);
				PopUpManager.centerPopUp(modal);
				
			}
			
			private function excluir(event:RemoveModalEvent):void
			{
				dispatchEvent(new EquipamentoEvent(EquipamentoEvent.EXCLUIR_EQUIPAMENTO,equipamento));
				equipamento = null;
			}
	
		]]>
	</fx:Script>		

		<grid:MantisTable id="viewTable"
						  width="100%" height="100%"
						  draggableColumns="true"
						  dataProvider="{listaEquipamento}"
						  itemDoubleClick="editItem(data, event,false)"	>
			<grid:columns>
				
				<!-- CHANGE HERE THE ENTITY COLUMNS -->
				<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="nome" width=".40"
								   headerText = "{resourceManager.getString('ApplicationResource','NOME_EQUIPAMENTO')}"
								   textAlign="center"
								   sortable="false"
								   dataField="nome"							   
								   />
				
				<dc:DataGridColumnFilter filterRenderer="components.grid.filtros.BeginWithFilterRenderer" id="descricao" width=".50" textAlign="center"
								   headerText = "{resourceManager.getString('ApplicationResource','DESCRICAO')}"
								   dataField = "descricao"
								   />
				
				<!-- EDIT/REMOVE COLUMNS -->
				
				<mx:DataGridColumn headerText = "{resourceManager.getString('ApplicationResource','ACTION_COLUMN')}"	
								   draggable="false" width=".10" textAlign="center"							 
								   editable="false"
								   sortable="false">
					<mx:itemRenderer>
						<fx:Component>
							<mx:HBox horizontalAlign="center"
									 verticalAlign="middle"
									 >
								
								<mx:Image source="@Embed(source='/assets/icons/edit.png')"
										  click="parentDocument.editItem(data, event, true)"
										  buttonMode="true"
										  useHandCursor="true"
										  toolTip="{resourceManager.getString('ApplicationResource','EDIT')}"
										  />
								
								<mx:Image source="@Embed(source='/assets/icons/delete.png')"
										  click="parentDocument.excluirItem(data, event, true)"
										  buttonMode="true"
										  useHandCursor="true"
										  toolTip="{resourceManager.getString('ApplicationResource','EXCLUIR')}"
										  />
								
							</mx:HBox>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</grid:columns>
		</grid:MantisTable>

</mx:VBox>

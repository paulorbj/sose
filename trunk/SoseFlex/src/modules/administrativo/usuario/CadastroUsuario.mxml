<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:usuario="modules.administrativo.usuario.*"
		 creationComplete="onCreationComplete()" 
		 width="100%" horizontalAlign="center" height="100%" 
		 paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10" >
	
	<fx:Declarations>
		<mx:RemoteObject id="usuarioService" destination="usuarioService" endpoint="{resourceManager.getString('ConfigurationResource','amf')}">			
			<mx:method name="listarUsuarios"      
					   fault="onListarUsuariosFault(event)" 
					   result="onListarUsuariosResult(event)"
					   />
			<mx:method name="salvarUsuario"      
					   fault="onSalvarUsuarioFault(event)" 
					   result="onSalvarUsuarioResult(event)"
					   />
			<mx:method name="excluirUsuario"      
					   fault="onExcluirUsuarioFault(event)" 
					   result="onExcluirUsuarioResult(event)"
					   />
		</mx:RemoteObject>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import components.messages.MensagemEvent;
			import components.messages.MessageType;
			
			import entities.administrativo.Usuario;
			
			import modules.administrativo.usuario.eventos.UsuarioEvent;
			
			import mx.collections.ArrayCollection;
			import mx.managers.CursorManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]			
			private var _usuario:Usuario;
			
			[Bindable]	
			private var _listaUsuario:ArrayCollection = new ArrayCollection;
			
			private function onCreationComplete():void
			{
				usuarioService.listarUsuarios();	
				this.addEventListener(UsuarioEvent.EDITAR_USUARIO,onEditar);
				this.addEventListener(UsuarioEvent.EXCLUIR_USUARIO,onExcluir);
			}
			
			private function onEditar(event:UsuarioEvent):void
			{
				this.currentState = "edicao";
				limpar();
				dados.usuario = event.usuario;
			}
			
			private function onExcluir(event:UsuarioEvent):void
			{
				_usuario = event.usuario;
				usuarioService.excluirUsuario(event.usuario);
			}
			
			private function onListarUsuariosResult(event:ResultEvent = null):void
			{
				CursorManager.removeAllCursors(); 
				_listaUsuario.removeAll();
				_listaUsuario = event.result as ArrayCollection;
				listagem.setListaUsuario(_listaUsuario);
			}
			
			private function onListarUsuariosFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[ListarUsuariosFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");		
			}
			
			private function onSalvarUsuarioResult(event:ResultEvent = null):void
			{
				CursorManager.removeAllCursors(); 
				_usuario = event.result as Usuario;
				if(dados.usuario.id == 0){
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','USUARIO_SALVAR_SUCESSO'), MessageType.SUCCESS, 10000));
				}else{
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','USUARIO_EDITAR_SUCESSO'), MessageType.SUCCESS, 10000));
				}
				listagem.adicionarUsuario(_usuario);
				dados.limpar();
			}
			
			private function onSalvarUsuarioFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[SalvarUSUARIOFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");
				var str:String = event.fault.faultString.substr(0,22);
				var i:Number;
				if(str == "br.com.sose.exceptions"){
					i = event.fault.faultString.indexOf(":");
					dispatchEvent(new MensagemEvent(event.fault.faultString.substring(i+1), MessageType.ERROR, 10000));
				}else{
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','USUARIO_SALVAR_ERRO'), MessageType.ERROR, 10000));	
				}		
			}
			
			private function onExcluirUsuarioResult(event:ResultEvent = null):void
			{
				CursorManager.removeAllCursors(); 
				var index:int = _listaUsuario.getItemIndex(_usuario);
				_listaUsuario.removeItemAt(index);
				listagem.setListaUsuario(_listaUsuario);
				limpar();
				dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','USUARIO_REMOVER_SUCESSO'), MessageType.SUCCESS, 10000));
			}
			
			private function onExcluirUsuarioFault(event:FaultEvent = null):void
			{
				CursorManager.removeAllCursors();
				trace("[ExcluirUSUARIOFault] [" +	event.fault.faultCode + "] " + event.fault.faultString + " (" +	event.fault.faultDetail + ")");
				var str:String = event.fault.faultString.substr(0,22);
				var i:Number;
				if(str == "br.com.sose.exceptions"){
					i = event.fault.faultString.indexOf(":");
					dispatchEvent(new MensagemEvent(event.fault.faultString.substring(i+1), MessageType.ERROR, 10000));
				}else{
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','USUARIO_REMOVER_ERRO'), MessageType.ERROR, 10000));	
				}		
			}
			
			private function salvar(event:MouseEvent = null):void
			{
				if(dados.validarCampos()){
					usuarioService.salvarUsuario(dados.usuario);
				}else{
					dispatchEvent(new MensagemEvent(resourceManager.getString('ApplicationResource','ERRO_VALIDACAO'), MessageType.WARNING, 10000));
				}
			}
			
			private function limpar(event:MouseEvent = null):void
			{
				_usuario = new Usuario();
				if(dados)
					dados.limpar();
			}
			
			private function novo(event:MouseEvent = null):void
			{
				this.currentState = "insercao";
				limpar();			
			}
			
			private function voltar(event:MouseEvent = null):void
			{
				this.currentState = "listagem";
				limpar();
			}
			
			private function salvarEnter(event:KeyboardEvent):void
			{		
				if (event.charCode == 13) {
					salvar();
				}
			}
			
			private function limparEnter(event:KeyboardEvent):void
			{		
				if (event.charCode == 13) {
					limpar();
				}
			}
			
			private function voltarEnter(event:KeyboardEvent):void
			{		
				if (event.charCode == 13) {
					voltar();
				}
			}
		]]>
	</fx:Script>
	
	<mx:states>
		<s:State name="listagem"/>
		<s:State name="edicao"/>
		<s:State name="insercao"/>
	</mx:states>
	
	<mx:VBox width="100%" horizontalAlign="center">
		<s:Label fontSize="15" fontWeight="bold" text="{resourceManager.getString('ApplicationResource','LISTA_USUARIO')}" includeIn="listagem"/>
		<s:Label fontSize="15" fontWeight="bold" text="{resourceManager.getString('ApplicationResource','DETALHAMENTO_USUARIO')}" excludeFrom="listagem"/>
	</mx:VBox>	
	
	<mx:VBox width="100%" horizontalAlign="left" >
		<mx:Button id="newButton" includeIn="listagem"
				   label="{resourceManager.getString('ApplicationResource','NOVO')}"
				   height="25"
				   icon="@Embed(source='/assets/icons/new.png')"
				   click="novo(event)"
				   />
	</mx:VBox>
	
	<usuario:ListagemUsuarioCadastrado id="listagem" includeIn="listagem" width="100%" height="100%" />
	
	<usuario:DadosUsuario id="dados" excludeFrom="listagem" width="100%" />
	
	<mx:HBox width="100%" horizontalAlign="left" verticalAlign="bottom">
		<mx:Button id="saveButton" excludeFrom="listagem"
				   label="{resourceManager.getString('ApplicationResource','SALVAR')}"
				   height="25"
				   icon="@Embed(source='/assets/icons/save.png')"
				   keyDown="salvarEnter(event)"
				   click="salvar(event)"
				   />
		<mx:Button id="cleanButton" excludeFrom="listagem"
				   label="{resourceManager.getString('ApplicationResource','LIMPAR')}"
				   height="25"
				   icon="@Embed(source='/assets/icons/clean.png')"
				   keyDown="limparEnter(event)"
				   click="limpar(event)"
				   />
		<mx:Button id="voltarButton" excludeFrom="listagem"
				   label="{resourceManager.getString('ApplicationResource','VOLTAR')}"
				   height="25"
				   icon="@Embed(source='/assets/icons/back.png')"
				   keyDown="voltarEnter(event)"
				   click="voltar(event)"
				   />
	</mx:HBox>
	
</mx:VBox>
